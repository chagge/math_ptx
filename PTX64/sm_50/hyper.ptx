//
// Generated by NVIDIA NVVM Compiler
// Compiler built on Thu Jul 31 22:29:38 2014 (1406860178)
// Cuda compilation tools, release 6.5, V6.5.14
//

.version 4.1
.target sm_50
.address_size 64


.weak .func  (.param .b32 funj_retval0) cudaMalloj(
	.param .b64 cudaMalloj_param_0,
	.param .b64 cudaMalloj_param_1
)
{
	.reg .s32 	%r<2>;


	mov.u32 	%r1, 30;
	st.param.b32	[funj_retval0+0], %r1;
	ret;
}

.weak .func  (.param .b32 funj_retval0) cudaFuncGetAttributes(
	.param .b64 cudaFuncGetAttributes_param_0,
	.param .b64 cudaFuncGetAttributes_param_1
)
{
	.reg .s32 	%r<2>;


	mov.u32 	%r1, 30;
	st.param.b32	[funj_retval0+0], %r1;
	ret;
}

.weak .func  (.param .b32 funj_retval0) cudaDeviceGetAttribute(
	.param .b64 cudaDeviceGetAttribute_param_0,
	.param .b32 cudaDeviceGetAttribute_param_1,
	.param .b32 cudaDeviceGetAttribute_param_2
)
{
	.reg .s32 	%r<2>;


	mov.u32 	%r1, 30;
	st.param.b32	[funj_retval0+0], %r1;
	ret;
}

.weak .func  (.param .b32 funj_retval0) cudaGetDevice(
	.param .b64 cudaGetDevice_param_0
)
{
	.reg .s32 	%r<2>;


	mov.u32 	%r1, 30;
	st.param.b32	[funj_retval0+0], %r1;
	ret;
}

.weak .func  (.param .b32 funj_retval0) cudaOccupancyMaxActiveBlocksPerMultiprocessor(
	.param .b64 cudaOccupancyMaxActiveBlocksPerMultiprocessor_param_0,
	.param .b64 cudaOccupancyMaxActiveBlocksPerMultiprocessor_param_1,
	.param .b32 cudaOccupancyMaxActiveBlocksPerMultiprocessor_param_2,
	.param .b64 cudaOccupancyMaxActiveBlocksPerMultiprocessor_param_3
)
{
	.reg .s32 	%r<2>;


	mov.u32 	%r1, 30;
	st.param.b32	[funj_retval0+0], %r1;
	ret;
}

.visible .func  (.param .b32 funj_retval0) ___sinhs(
	.param .b32 ___sinhs_param_0
)
{
	.reg .pred 	%p<3>;
	.reg .s32 	%r<6>;
	.reg .f32 	%f<32>;


	ld.param.f32 	%f5, [___sinhs_param_0];
	abs.f32 	%f1, %f5;
	setp.ltu.f32	%p1, %f1, 0f3F800000;
	@%p1 bra 	BB5_2;

	mul.f32 	%f8, %f1, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f9, %f8;
	mov.f32 	%f10, 0fBF317200;
	fma.rn.f32 	%f11, %f9, %f10, %f1;
	mov.f32 	%f12, 0fB5BFBE8E;
	fma.rn.f32 	%f13, %f9, %f12, %f11;
	mul.f32 	%f7, %f13, 0f3FB8AA3B;
	// inline asm
	ex2.approx.ftz.f32 %f6,%f7;
	// inline asm
	add.f32 	%f14, %f9, 0fC0000000;
	ex2.approx.f32 	%f15, %f14;
	mul.f32 	%f16, %f6, %f15;
	mov.f32 	%f17, 0f3E000000;
	div.approx.f32 	%f18, %f17, %f16;
	neg.f32 	%f19, %f18;
	mov.f32 	%f20, 0f40000000;
	fma.rn.f32 	%f21, %f20, %f16, %f19;
	mov.b32 	 %r1, %f21;
	setp.ltu.f32	%p2, %f1, 0f42B40000;
	selp.b32	%r2, %r1, 2139095040, %p2;
	mov.b32 	 %r3, %f5;
	and.b32  	%r4, %r3, -2147483648;
	or.b32  	%r5, %r2, %r4;
	mov.b32 	 %f31, %r5;
	bra.uni 	BB5_3;

BB5_2:
	mul.f32 	%f22, %f5, %f5;
	mov.f32 	%f23, 0f394FFF49;
	mov.f32 	%f24, 0f363D0ADA;
	fma.rn.f32 	%f25, %f24, %f22, %f23;
	mov.f32 	%f26, 0f3C08889A;
	fma.rn.f32 	%f27, %f25, %f22, %f26;
	mov.f32 	%f28, 0f3E2AAAAB;
	fma.rn.f32 	%f29, %f27, %f22, %f28;
	mul.f32 	%f30, %f29, %f22;
	fma.rn.f32 	%f31, %f30, %f5, %f5;

BB5_3:
	st.param.f32	[funj_retval0+0], %f31;
	ret;
}

.visible .func  (.param .b32 funj_retval0) ___sinhi(
	.param .b32 ___sinhi_param_0
)
{
	.reg .pred 	%p<3>;
	.reg .s32 	%r<8>;
	.reg .f32 	%f<32>;


	ld.param.u32 	%r1, [___sinhi_param_0];
	cvt.rn.f32.s32	%f1, %r1;
	abs.f32 	%f2, %f1;
	setp.ltu.f32	%p1, %f2, 0f3F800000;
	@%p1 bra 	BB6_2;

	mul.f32 	%f8, %f2, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f9, %f8;
	mov.f32 	%f10, 0fBF317200;
	fma.rn.f32 	%f11, %f9, %f10, %f2;
	mov.f32 	%f12, 0fB5BFBE8E;
	fma.rn.f32 	%f13, %f9, %f12, %f11;
	mul.f32 	%f7, %f13, 0f3FB8AA3B;
	// inline asm
	ex2.approx.ftz.f32 %f6,%f7;
	// inline asm
	add.f32 	%f14, %f9, 0fC0000000;
	ex2.approx.f32 	%f15, %f14;
	mul.f32 	%f16, %f6, %f15;
	mov.f32 	%f17, 0f3E000000;
	div.approx.f32 	%f18, %f17, %f16;
	neg.f32 	%f19, %f18;
	mov.f32 	%f20, 0f40000000;
	fma.rn.f32 	%f21, %f20, %f16, %f19;
	mov.b32 	 %r2, %f21;
	setp.ltu.f32	%p2, %f2, 0f42B40000;
	selp.b32	%r3, %r2, 2139095040, %p2;
	mov.b32 	 %r4, %f1;
	and.b32  	%r5, %r4, -2147483648;
	or.b32  	%r6, %r3, %r5;
	mov.b32 	 %f31, %r6;
	bra.uni 	BB6_3;

BB6_2:
	mul.f32 	%f22, %f1, %f1;
	mov.f32 	%f23, 0f394FFF49;
	mov.f32 	%f24, 0f363D0ADA;
	fma.rn.f32 	%f25, %f24, %f22, %f23;
	mov.f32 	%f26, 0f3C08889A;
	fma.rn.f32 	%f27, %f25, %f22, %f26;
	mov.f32 	%f28, 0f3E2AAAAB;
	fma.rn.f32 	%f29, %f27, %f22, %f28;
	mul.f32 	%f30, %f29, %f22;
	fma.rn.f32 	%f31, %f30, %f1, %f1;

BB6_3:
	cvt.rzi.s32.f32	%r7, %f31;
	st.param.b32	[funj_retval0+0], %r7;
	ret;
}

.visible .func  (.param .b32 funj_retval0) ___sinhu(
	.param .b32 ___sinhu_param_0
)
{
	.reg .pred 	%p<3>;
	.reg .s32 	%r<8>;
	.reg .f32 	%f<32>;


	ld.param.u32 	%r1, [___sinhu_param_0];
	cvt.rn.f32.u32	%f1, %r1;
	abs.f32 	%f2, %f1;
	setp.ltu.f32	%p1, %f2, 0f3F800000;
	@%p1 bra 	BB7_2;

	mul.f32 	%f8, %f2, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f9, %f8;
	mov.f32 	%f10, 0fBF317200;
	fma.rn.f32 	%f11, %f9, %f10, %f2;
	mov.f32 	%f12, 0fB5BFBE8E;
	fma.rn.f32 	%f13, %f9, %f12, %f11;
	mul.f32 	%f7, %f13, 0f3FB8AA3B;
	// inline asm
	ex2.approx.ftz.f32 %f6,%f7;
	// inline asm
	add.f32 	%f14, %f9, 0fC0000000;
	ex2.approx.f32 	%f15, %f14;
	mul.f32 	%f16, %f6, %f15;
	mov.f32 	%f17, 0f3E000000;
	div.approx.f32 	%f18, %f17, %f16;
	neg.f32 	%f19, %f18;
	mov.f32 	%f20, 0f40000000;
	fma.rn.f32 	%f21, %f20, %f16, %f19;
	mov.b32 	 %r2, %f21;
	setp.ltu.f32	%p2, %f2, 0f42B40000;
	selp.b32	%r3, %r2, 2139095040, %p2;
	mov.b32 	 %r4, %f1;
	and.b32  	%r5, %r4, -2147483648;
	or.b32  	%r6, %r3, %r5;
	mov.b32 	 %f31, %r6;
	bra.uni 	BB7_3;

BB7_2:
	mul.f32 	%f22, %f1, %f1;
	mov.f32 	%f23, 0f394FFF49;
	mov.f32 	%f24, 0f363D0ADA;
	fma.rn.f32 	%f25, %f24, %f22, %f23;
	mov.f32 	%f26, 0f3C08889A;
	fma.rn.f32 	%f27, %f25, %f22, %f26;
	mov.f32 	%f28, 0f3E2AAAAB;
	fma.rn.f32 	%f29, %f27, %f22, %f28;
	mul.f32 	%f30, %f29, %f22;
	fma.rn.f32 	%f31, %f30, %f1, %f1;

BB7_3:
	cvt.rzi.u32.f32	%r7, %f31;
	st.param.b32	[funj_retval0+0], %r7;
	ret;
}

.visible .func  (.param .b32 funj_retval0) ___sinhj(
	.param .b32 ___sinhj_param_0
)
{
	.reg .pred 	%p<3>;
	.reg .s16 	%rs<2>;
	.reg .s32 	%r<8>;
	.reg .f32 	%f<32>;


	ld.param.s8 	%rs1, [___sinhj_param_0];
	cvt.rn.f32.s16	%f1, %rs1;
	abs.f32 	%f2, %f1;
	setp.ltu.f32	%p1, %f2, 0f3F800000;
	@%p1 bra 	BB8_2;

	mul.f32 	%f8, %f2, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f9, %f8;
	mov.f32 	%f10, 0fBF317200;
	fma.rn.f32 	%f11, %f9, %f10, %f2;
	mov.f32 	%f12, 0fB5BFBE8E;
	fma.rn.f32 	%f13, %f9, %f12, %f11;
	mul.f32 	%f7, %f13, 0f3FB8AA3B;
	// inline asm
	ex2.approx.ftz.f32 %f6,%f7;
	// inline asm
	add.f32 	%f14, %f9, 0fC0000000;
	ex2.approx.f32 	%f15, %f14;
	mul.f32 	%f16, %f6, %f15;
	mov.f32 	%f17, 0f3E000000;
	div.approx.f32 	%f18, %f17, %f16;
	neg.f32 	%f19, %f18;
	mov.f32 	%f20, 0f40000000;
	fma.rn.f32 	%f21, %f20, %f16, %f19;
	mov.b32 	 %r1, %f21;
	setp.ltu.f32	%p2, %f2, 0f42B40000;
	selp.b32	%r2, %r1, 2139095040, %p2;
	mov.b32 	 %r3, %f1;
	and.b32  	%r4, %r3, -2147483648;
	or.b32  	%r5, %r2, %r4;
	mov.b32 	 %f31, %r5;
	bra.uni 	BB8_3;

BB8_2:
	mul.f32 	%f22, %f1, %f1;
	mov.f32 	%f23, 0f394FFF49;
	mov.f32 	%f24, 0f363D0ADA;
	fma.rn.f32 	%f25, %f24, %f22, %f23;
	mov.f32 	%f26, 0f3C08889A;
	fma.rn.f32 	%f27, %f25, %f22, %f26;
	mov.f32 	%f28, 0f3E2AAAAB;
	fma.rn.f32 	%f29, %f27, %f22, %f28;
	mul.f32 	%f30, %f29, %f22;
	fma.rn.f32 	%f31, %f30, %f1, %f1;

BB8_3:
	cvt.rzi.s32.f32	%r6, %f31;
	cvt.s32.s8 	%r7, %r6;
	st.param.b32	[funj_retval0+0], %r7;
	ret;
}

.visible .func  (.param .b32 funj_retval0) ___sinvv(
	.param .b32 ___sinvv_param_0
)
{
	.reg .pred 	%p<3>;
	.reg .s16 	%rs<2>;
	.reg .s32 	%r<8>;
	.reg .f32 	%f<32>;


	ld.param.u8 	%rs1, [___sinvv_param_0];
	cvt.rn.f32.u16	%f1, %rs1;
	abs.f32 	%f2, %f1;
	setp.ltu.f32	%p1, %f2, 0f3F800000;
	@%p1 bra 	BB9_2;

	mul.f32 	%f8, %f2, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f9, %f8;
	mov.f32 	%f10, 0fBF317200;
	fma.rn.f32 	%f11, %f9, %f10, %f2;
	mov.f32 	%f12, 0fB5BFBE8E;
	fma.rn.f32 	%f13, %f9, %f12, %f11;
	mul.f32 	%f7, %f13, 0f3FB8AA3B;
	// inline asm
	ex2.approx.ftz.f32 %f6,%f7;
	// inline asm
	add.f32 	%f14, %f9, 0fC0000000;
	ex2.approx.f32 	%f15, %f14;
	mul.f32 	%f16, %f6, %f15;
	mov.f32 	%f17, 0f3E000000;
	div.approx.f32 	%f18, %f17, %f16;
	neg.f32 	%f19, %f18;
	mov.f32 	%f20, 0f40000000;
	fma.rn.f32 	%f21, %f20, %f16, %f19;
	mov.b32 	 %r1, %f21;
	setp.ltu.f32	%p2, %f2, 0f42B40000;
	selp.b32	%r2, %r1, 2139095040, %p2;
	mov.b32 	 %r3, %f1;
	and.b32  	%r4, %r3, -2147483648;
	or.b32  	%r5, %r2, %r4;
	mov.b32 	 %f31, %r5;
	bra.uni 	BB9_3;

BB9_2:
	mul.f32 	%f22, %f1, %f1;
	mov.f32 	%f23, 0f394FFF49;
	mov.f32 	%f24, 0f363D0ADA;
	fma.rn.f32 	%f25, %f24, %f22, %f23;
	mov.f32 	%f26, 0f3C08889A;
	fma.rn.f32 	%f27, %f25, %f22, %f26;
	mov.f32 	%f28, 0f3E2AAAAB;
	fma.rn.f32 	%f29, %f27, %f22, %f28;
	mul.f32 	%f30, %f29, %f22;
	fma.rn.f32 	%f31, %f30, %f1, %f1;

BB9_3:
	cvt.rzi.u32.f32	%r6, %f31;
	and.b32  	%r7, %r6, 255;
	st.param.b32	[funj_retval0+0], %r7;
	ret;
}

.visible .func  (.param .b64 funj_retval0) ___sinhd(
	.param .b64 ___sinhd_param_0
)
{
	.reg .pred 	%p<6>;
	.reg .s32 	%r<19>;
	.reg .f64 	%fd<69>;


	ld.param.f64 	%fd5, [___sinhd_param_0];
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r1}, %fd5;
	}
	and.b32  	%r2, %r1, 2147483647;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r3, %temp}, %fd5;
	}
	mov.b64 	%fd1, {%r3, %r2};
	setp.lt.u32	%p1, %r2, 1072693248;
	@%p1 bra 	BB10_2;

	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r4}, %fd1;
	}
	mov.f64 	%fd6, 0d3FF71547652B82FE;
	mul.rn.f64 	%fd7, %fd1, %fd6;
	mov.f64 	%fd8, 0d4338000000000000;
	add.rn.f64 	%fd9, %fd7, %fd8;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r5, %temp}, %fd9;
	}
	add.s32 	%r6, %r5, -1;
	mov.f64 	%fd10, 0dC338000000000000;
	add.rn.f64 	%fd11, %fd9, %fd10;
	mov.f64 	%fd12, 0dBFE62E42FEFA39EF;
	fma.rn.f64 	%fd13, %fd11, %fd12, %fd1;
	mov.f64 	%fd14, 0dBC7ABC9E3B39803F;
	fma.rn.f64 	%fd15, %fd11, %fd14, %fd13;
	add.s32 	%r7, %r4, %r4;
	setp.lt.u32	%p2, %r7, 2142496327;
	selp.b32	%r8, 0, %r6, %p2;
	mov.u32 	%r9, 0;
	selp.f64	%fd16, %fd1, %fd15, %p2;
	mov.f64 	%fd17, 0d3E5AF86D8EBD13CD;
	mov.f64 	%fd18, 0d3E21F4076ACD15B6;
	fma.rn.f64 	%fd19, %fd18, %fd16, %fd17;
	mov.f64 	%fd20, 0d3E927E5092BA033D;
	fma.rn.f64 	%fd21, %fd19, %fd16, %fd20;
	mov.f64 	%fd22, 0d3EC71DDE6C5F9DA1;
	fma.rn.f64 	%fd23, %fd21, %fd16, %fd22;
	mov.f64 	%fd24, 0d3EFA01A018D034E6;
	fma.rn.f64 	%fd25, %fd23, %fd16, %fd24;
	mov.f64 	%fd26, 0d3F2A01A01B3B6940;
	fma.rn.f64 	%fd27, %fd25, %fd16, %fd26;
	mov.f64 	%fd28, 0d3F56C16C16C1B5DD;
	fma.rn.f64 	%fd29, %fd27, %fd16, %fd28;
	mov.f64 	%fd30, 0d3F8111111110F74D;
	fma.rn.f64 	%fd31, %fd29, %fd16, %fd30;
	mov.f64 	%fd32, 0d3FA555555555554D;
	fma.rn.f64 	%fd33, %fd31, %fd16, %fd32;
	mov.f64 	%fd34, 0d3FC5555555555557;
	fma.rn.f64 	%fd35, %fd33, %fd16, %fd34;
	mov.f64 	%fd36, 0d3FE0000000000000;
	fma.rn.f64 	%fd37, %fd35, %fd16, %fd36;
	mul.f64 	%fd38, %fd37, %fd16;
	fma.rn.f64 	%fd39, %fd38, %fd16, %fd16;
	setp.eq.s32	%p3, %r8, 1024;
	selp.b32	%r10, -1, 0, %p3;
	add.s32 	%r11, %r10, %r8;
	shl.b32 	%r12, %r11, 20;
	add.s32 	%r13, %r12, 1072693248;
	mov.b64 	%fd40, {%r9, %r13};
	mov.u32 	%r14, 1071644672;
	mov.b64 	%fd41, {%r9, %r14};
	sub.f64 	%fd42, %fd40, %fd41;
	fma.rn.f64 	%fd43, %fd39, %fd40, %fd42;
	add.f64 	%fd44, %fd43, %fd43;
	selp.f64	%fd45, %fd44, %fd43, %p3;
	setp.eq.s32	%p4, %r7, 0;
	selp.f64	%fd46, %fd16, %fd45, %p4;
	mov.f64 	%fd47, 0d3FF0000000000000;
	mov.f64 	%fd48, 0d4000000000000000;
	fma.rn.f64 	%fd49, %fd48, %fd46, %fd47;
	div.rn.f64 	%fd50, %fd46, %fd49;
	add.f64 	%fd51, %fd46, %fd50;
	setp.ltu.f64	%p5, %fd1, 0d408633CE8FB9F87E;
	selp.f64	%fd68, %fd51, 0d7FF0000000000000, %p5;
	bra.uni 	BB10_3;

BB10_2:
	mul.f64 	%fd52, %fd1, %fd1;
	mov.f64 	%fd53, 0d3DE611A561D87DEF;
	mov.f64 	%fd54, 0d3D6B4C75AB274C53;
	fma.rn.f64 	%fd55, %fd54, %fd52, %fd53;
	mov.f64 	%fd56, 0d3E5AE64671B18F5C;
	fma.rn.f64 	%fd57, %fd55, %fd52, %fd56;
	mov.f64 	%fd58, 0d3EC71DE3A465B1E4;
	fma.rn.f64 	%fd59, %fd57, %fd52, %fd58;
	mov.f64 	%fd60, 0d3F2A01A01A02899D;
	fma.rn.f64 	%fd61, %fd59, %fd52, %fd60;
	mov.f64 	%fd62, 0d3F811111111110A6;
	fma.rn.f64 	%fd63, %fd61, %fd52, %fd62;
	mov.f64 	%fd64, 0d3FC5555555555556;
	fma.rn.f64 	%fd65, %fd63, %fd52, %fd64;
	mul.f64 	%fd66, %fd65, %fd52;
	fma.rn.f64 	%fd68, %fd66, %fd1, %fd1;

BB10_3:
	and.b32  	%r15, %r1, -2147483648;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r16}, %fd68;
	}
	or.b32  	%r17, %r16, %r15;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r18, %temp}, %fd68;
	}
	mov.b64 	%fd67, {%r18, %r17};
	st.param.f64	[funj_retval0+0], %fd67;
	ret;
}

.visible .func  (.param .b32 funj_retval0) ___coshs(
	.param .b32 ___coshs_param_0
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<19>;


	ld.param.f32 	%f3, [___coshs_param_0];
	abs.f32 	%f4, %f3;
	mul.f32 	%f5, %f4, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f6, %f5;
	mov.f32 	%f7, 0fBF317200;
	fma.rn.f32 	%f8, %f6, %f7, %f4;
	mov.f32 	%f9, 0fB5BFBE8E;
	fma.rn.f32 	%f10, %f6, %f9, %f8;
	mul.f32 	%f2, %f10, 0f3FB8AA3B;
	// inline asm
	ex2.approx.ftz.f32 %f1,%f2;
	// inline asm
	add.f32 	%f11, %f6, 0fC0000000;
	ex2.approx.f32 	%f12, %f11;
	mul.f32 	%f13, %f1, %f12;
	mov.f32 	%f14, 0f3E000000;
	div.approx.f32 	%f15, %f14, %f13;
	mov.f32 	%f16, 0f40000000;
	fma.rn.f32 	%f17, %f16, %f13, %f15;
	setp.ltu.f32	%p1, %f4, 0f42B40000;
	selp.f32	%f18, %f17, 0f7F800000, %p1;
	st.param.f32	[funj_retval0+0], %f18;
	ret;
}

.visible .func  (.param .b32 funj_retval0) ___coshi(
	.param .b32 ___coshi_param_0
)
{
	.reg .pred 	%p<2>;
	.reg .s32 	%r<3>;
	.reg .f32 	%f<19>;


	ld.param.u32 	%r1, [___coshi_param_0];
	cvt.rn.f32.s32	%f3, %r1;
	abs.f32 	%f4, %f3;
	mul.f32 	%f5, %f4, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f6, %f5;
	mov.f32 	%f7, 0fBF317200;
	fma.rn.f32 	%f8, %f6, %f7, %f4;
	mov.f32 	%f9, 0fB5BFBE8E;
	fma.rn.f32 	%f10, %f6, %f9, %f8;
	mul.f32 	%f2, %f10, 0f3FB8AA3B;
	// inline asm
	ex2.approx.ftz.f32 %f1,%f2;
	// inline asm
	add.f32 	%f11, %f6, 0fC0000000;
	ex2.approx.f32 	%f12, %f11;
	mul.f32 	%f13, %f1, %f12;
	mov.f32 	%f14, 0f3E000000;
	div.approx.f32 	%f15, %f14, %f13;
	mov.f32 	%f16, 0f40000000;
	fma.rn.f32 	%f17, %f16, %f13, %f15;
	setp.ltu.f32	%p1, %f4, 0f42B40000;
	selp.f32	%f18, %f17, 0f7F800000, %p1;
	cvt.rzi.s32.f32	%r2, %f18;
	st.param.b32	[funj_retval0+0], %r2;
	ret;
}

.visible .func  (.param .b32 funj_retval0) ___coshu(
	.param .b32 ___coshu_param_0
)
{
	.reg .pred 	%p<2>;
	.reg .s32 	%r<3>;
	.reg .f32 	%f<19>;


	ld.param.u32 	%r1, [___coshu_param_0];
	cvt.rn.f32.u32	%f3, %r1;
	abs.f32 	%f4, %f3;
	mul.f32 	%f5, %f4, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f6, %f5;
	mov.f32 	%f7, 0fBF317200;
	fma.rn.f32 	%f8, %f6, %f7, %f4;
	mov.f32 	%f9, 0fB5BFBE8E;
	fma.rn.f32 	%f10, %f6, %f9, %f8;
	mul.f32 	%f2, %f10, 0f3FB8AA3B;
	// inline asm
	ex2.approx.ftz.f32 %f1,%f2;
	// inline asm
	add.f32 	%f11, %f6, 0fC0000000;
	ex2.approx.f32 	%f12, %f11;
	mul.f32 	%f13, %f1, %f12;
	mov.f32 	%f14, 0f3E000000;
	div.approx.f32 	%f15, %f14, %f13;
	mov.f32 	%f16, 0f40000000;
	fma.rn.f32 	%f17, %f16, %f13, %f15;
	setp.ltu.f32	%p1, %f4, 0f42B40000;
	selp.f32	%f18, %f17, 0f7F800000, %p1;
	cvt.rzi.u32.f32	%r2, %f18;
	st.param.b32	[funj_retval0+0], %r2;
	ret;
}

.visible .func  (.param .b32 funj_retval0) ___coshj(
	.param .b32 ___coshj_param_0
)
{
	.reg .pred 	%p<2>;
	.reg .s16 	%rs<2>;
	.reg .s32 	%r<3>;
	.reg .f32 	%f<19>;


	ld.param.s8 	%rs1, [___coshj_param_0];
	cvt.rn.f32.s16	%f3, %rs1;
	abs.f32 	%f4, %f3;
	mul.f32 	%f5, %f4, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f6, %f5;
	mov.f32 	%f7, 0fBF317200;
	fma.rn.f32 	%f8, %f6, %f7, %f4;
	mov.f32 	%f9, 0fB5BFBE8E;
	fma.rn.f32 	%f10, %f6, %f9, %f8;
	mul.f32 	%f2, %f10, 0f3FB8AA3B;
	// inline asm
	ex2.approx.ftz.f32 %f1,%f2;
	// inline asm
	add.f32 	%f11, %f6, 0fC0000000;
	ex2.approx.f32 	%f12, %f11;
	mul.f32 	%f13, %f1, %f12;
	mov.f32 	%f14, 0f3E000000;
	div.approx.f32 	%f15, %f14, %f13;
	mov.f32 	%f16, 0f40000000;
	fma.rn.f32 	%f17, %f16, %f13, %f15;
	setp.ltu.f32	%p1, %f4, 0f42B40000;
	selp.f32	%f18, %f17, 0f7F800000, %p1;
	cvt.rzi.s32.f32	%r1, %f18;
	cvt.s32.s8 	%r2, %r1;
	st.param.b32	[funj_retval0+0], %r2;
	ret;
}

.visible .func  (.param .b32 funj_retval0) ___cosvv(
	.param .b32 ___cosvv_param_0
)
{
	.reg .pred 	%p<2>;
	.reg .s16 	%rs<2>;
	.reg .s32 	%r<3>;
	.reg .f32 	%f<19>;


	ld.param.u8 	%rs1, [___cosvv_param_0];
	cvt.rn.f32.u16	%f3, %rs1;
	abs.f32 	%f4, %f3;
	mul.f32 	%f5, %f4, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f6, %f5;
	mov.f32 	%f7, 0fBF317200;
	fma.rn.f32 	%f8, %f6, %f7, %f4;
	mov.f32 	%f9, 0fB5BFBE8E;
	fma.rn.f32 	%f10, %f6, %f9, %f8;
	mul.f32 	%f2, %f10, 0f3FB8AA3B;
	// inline asm
	ex2.approx.ftz.f32 %f1,%f2;
	// inline asm
	add.f32 	%f11, %f6, 0fC0000000;
	ex2.approx.f32 	%f12, %f11;
	mul.f32 	%f13, %f1, %f12;
	mov.f32 	%f14, 0f3E000000;
	div.approx.f32 	%f15, %f14, %f13;
	mov.f32 	%f16, 0f40000000;
	fma.rn.f32 	%f17, %f16, %f13, %f15;
	setp.ltu.f32	%p1, %f4, 0f42B40000;
	selp.f32	%f18, %f17, 0f7F800000, %p1;
	cvt.rzi.u32.f32	%r1, %f18;
	and.b32  	%r2, %r1, 255;
	st.param.b32	[funj_retval0+0], %r2;
	ret;
}

.visible .func  (.param .b64 funj_retval0) ___coshd(
	.param .b64 ___coshd_param_0
)
{
	.reg .pred 	%p<4>;
	.reg .s32 	%r<16>;
	.reg .f64 	%fd<54>;


	ld.param.f64 	%fd8, [___coshd_param_0];
	abs.f64 	%fd1, %fd8;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r6}, %fd1;
	}
	setp.lt.u32	%p1, %r6, 1082536911;
	@%p1 bra 	BB16_2;

	setp.gt.f64	%p2, %fd1, 0d0000000000000000;
	selp.f64	%fd9, 0d7FF0000000000000, %fd8, %p2;
	add.f64 	%fd53, %fd9, %fd9;
	bra.uni 	BB16_6;

BB16_2:
	mov.f64 	%fd10, 0d3FF71547652B82FE;
	mul.rn.f64 	%fd11, %fd1, %fd10;
	mov.f64 	%fd12, 0d4338000000000000;
	add.rn.f64 	%fd13, %fd11, %fd12;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r1, %temp}, %fd13;
	}
	mov.f64 	%fd14, 0dC338000000000000;
	add.rn.f64 	%fd15, %fd13, %fd14;
	mov.f64 	%fd16, 0dBFE62E42FEFA39EF;
	fma.rn.f64 	%fd17, %fd15, %fd16, %fd1;
	mov.f64 	%fd18, 0dBC7ABC9E3B39803F;
	fma.rn.f64 	%fd19, %fd15, %fd18, %fd17;
	mov.f64 	%fd20, 0d3E928AF3FCA213EA;
	mov.f64 	%fd21, 0d3E5ADE1569CE2BDF;
	fma.rn.f64 	%fd22, %fd21, %fd19, %fd20;
	mov.f64 	%fd23, 0d3EC71DEE62401315;
	fma.rn.f64 	%fd24, %fd22, %fd19, %fd23;
	mov.f64 	%fd25, 0d3EFA01997C89EB71;
	fma.rn.f64 	%fd26, %fd24, %fd19, %fd25;
	mov.f64 	%fd27, 0d3F2A01A014761F65;
	fma.rn.f64 	%fd28, %fd26, %fd19, %fd27;
	mov.f64 	%fd29, 0d3F56C16C1852B7AF;
	fma.rn.f64 	%fd30, %fd28, %fd19, %fd29;
	mov.f64 	%fd31, 0d3F81111111122322;
	fma.rn.f64 	%fd32, %fd30, %fd19, %fd31;
	mov.f64 	%fd33, 0d3FA55555555502A1;
	fma.rn.f64 	%fd34, %fd32, %fd19, %fd33;
	mov.f64 	%fd35, 0d3FC5555555555511;
	fma.rn.f64 	%fd36, %fd34, %fd19, %fd35;
	mov.f64 	%fd37, 0d3FE000000000000B;
	fma.rn.f64 	%fd38, %fd36, %fd19, %fd37;
	mov.f64 	%fd39, 0d3FF0000000000000;
	fma.rn.f64 	%fd40, %fd38, %fd19, %fd39;
	fma.rn.f64 	%fd52, %fd40, %fd19, %fd39;
	add.s32 	%r2, %r1, -2;
	abs.s32 	%r7, %r2;
	setp.lt.s32	%p3, %r7, 1023;
	@%p3 bra 	BB16_4;

	add.s32 	%r8, %r1, 2044;
	shl.b32 	%r9, %r8, 19;
	and.b32  	%r10, %r9, -1048576;
	shl.b32 	%r11, %r8, 20;
	sub.s32 	%r15, %r11, %r10;
	mov.u32 	%r12, 0;
	mov.b64 	%fd41, {%r12, %r10};
	mul.f64 	%fd52, %fd52, %fd41;
	bra.uni 	BB16_5;

BB16_4:
	shl.b32 	%r13, %r2, 20;
	add.s32 	%r15, %r13, 1072693248;

BB16_5:
	mov.u32 	%r14, 0;
	mov.b64 	%fd44, {%r14, %r15};
	mul.f64 	%fd43, %fd52, %fd44;
	// inline asm
	rcp.approx.ftz.f64 %fd42,%fd43;
	// inline asm
	neg.f64 	%fd45, %fd43;
	fma.rn.f64 	%fd47, %fd45, %fd42, %fd39;
	fma.rn.f64 	%fd48, %fd47, %fd47, %fd47;
	fma.rn.f64 	%fd49, %fd48, %fd42, %fd42;
	mul.f64 	%fd50, %fd49, 0d3FC0000000000000;
	mov.f64 	%fd51, 0d4000000000000000;
	fma.rn.f64 	%fd53, %fd51, %fd43, %fd50;

BB16_6:
	st.param.f64	[funj_retval0+0], %fd53;
	ret;
}

.visible .func  (.param .b32 funj_retval0) ___tanhs(
	.param .b32 ___tanhs_param_0
)
{
	.reg .pred 	%p<4>;
	.reg .s32 	%r<6>;
	.reg .f32 	%f<33>;


	ld.param.f32 	%f5, [___tanhs_param_0];
	abs.f32 	%f1, %f5;
	setp.ltu.f32	%p1, %f1, 0f3F0CCCCD;
	@%p1 bra 	BB17_2;

	add.f32 	%f10, %f1, %f1;
	mul.f32 	%f11, %f10, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f12, %f11;
	mov.f32 	%f13, 0fBF317200;
	fma.rn.f32 	%f14, %f12, %f13, %f10;
	mov.f32 	%f15, 0fB5BFBE8E;
	fma.rn.f32 	%f16, %f12, %f15, %f14;
	mul.f32 	%f7, %f16, 0f3FB8AA3B;
	// inline asm
	ex2.approx.ftz.f32 %f6,%f7;
	// inline asm
	ex2.approx.f32 	%f17, %f12;
	mov.f32 	%f18, 0f3F800000;
	fma.rn.f32 	%f9, %f6, %f17, %f18;
	// inline asm
	rcp.approx.ftz.f32 %f8,%f9;
	// inline asm
	mov.f32 	%f19, 0fC0000000;
	fma.rn.f32 	%f20, %f8, %f19, %f18;
	mov.b32 	 %r1, %f20;
	setp.ltu.f32	%p2, %f1, 0f42B00000;
	selp.b32	%r2, %r1, 1065353216, %p2;
	mov.b32 	 %r3, %f5;
	and.b32  	%r4, %r3, -2147483648;
	or.b32  	%r5, %r2, %r4;
	mov.b32 	 %f32, %r5;
	bra.uni 	BB17_3;

BB17_2:
	mul.f32 	%f21, %f5, %f5;
	mov.f32 	%f22, 0fBD57BE66;
	mov.f32 	%f23, 0f3C86A81B;
	fma.rn.f32 	%f24, %f23, %f21, %f22;
	mov.f32 	%f25, 0f3E08677B;
	fma.rn.f32 	%f26, %f24, %f21, %f25;
	mov.f32 	%f27, 0fBEAAAA29;
	fma.rn.f32 	%f28, %f26, %f21, %f27;
	mul.f32 	%f29, %f28, %f21;
	fma.rn.f32 	%f30, %f29, %f5, %f5;
	add.f32 	%f31, %f5, %f5;
	setp.eq.f32	%p3, %f5, 0f00000000;
	selp.f32	%f32, %f31, %f30, %p3;

BB17_3:
	st.param.f32	[funj_retval0+0], %f32;
	ret;
}

.visible .func  (.param .b32 funj_retval0) ___tanhi(
	.param .b32 ___tanhi_param_0
)
{
	.reg .pred 	%p<4>;
	.reg .s32 	%r<8>;
	.reg .f32 	%f<33>;


	ld.param.u32 	%r1, [___tanhi_param_0];
	cvt.rn.f32.s32	%f1, %r1;
	abs.f32 	%f2, %f1;
	setp.ltu.f32	%p1, %f2, 0f3F0CCCCD;
	@%p1 bra 	BB18_2;

	add.f32 	%f10, %f2, %f2;
	mul.f32 	%f11, %f10, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f12, %f11;
	mov.f32 	%f13, 0fBF317200;
	fma.rn.f32 	%f14, %f12, %f13, %f10;
	mov.f32 	%f15, 0fB5BFBE8E;
	fma.rn.f32 	%f16, %f12, %f15, %f14;
	mul.f32 	%f7, %f16, 0f3FB8AA3B;
	// inline asm
	ex2.approx.ftz.f32 %f6,%f7;
	// inline asm
	ex2.approx.f32 	%f17, %f12;
	mov.f32 	%f18, 0f3F800000;
	fma.rn.f32 	%f9, %f6, %f17, %f18;
	// inline asm
	rcp.approx.ftz.f32 %f8,%f9;
	// inline asm
	mov.f32 	%f19, 0fC0000000;
	fma.rn.f32 	%f20, %f8, %f19, %f18;
	mov.b32 	 %r2, %f20;
	setp.ltu.f32	%p2, %f2, 0f42B00000;
	selp.b32	%r3, %r2, 1065353216, %p2;
	mov.b32 	 %r4, %f1;
	and.b32  	%r5, %r4, -2147483648;
	or.b32  	%r6, %r3, %r5;
	mov.b32 	 %f32, %r6;
	bra.uni 	BB18_3;

BB18_2:
	mul.f32 	%f21, %f1, %f1;
	mov.f32 	%f22, 0fBD57BE66;
	mov.f32 	%f23, 0f3C86A81B;
	fma.rn.f32 	%f24, %f23, %f21, %f22;
	mov.f32 	%f25, 0f3E08677B;
	fma.rn.f32 	%f26, %f24, %f21, %f25;
	mov.f32 	%f27, 0fBEAAAA29;
	fma.rn.f32 	%f28, %f26, %f21, %f27;
	mul.f32 	%f29, %f28, %f21;
	fma.rn.f32 	%f30, %f29, %f1, %f1;
	add.f32 	%f31, %f1, %f1;
	setp.eq.f32	%p3, %f1, 0f00000000;
	selp.f32	%f32, %f31, %f30, %p3;

BB18_3:
	cvt.rzi.s32.f32	%r7, %f32;
	st.param.b32	[funj_retval0+0], %r7;
	ret;
}

.visible .func  (.param .b32 funj_retval0) ___tanhu(
	.param .b32 ___tanhu_param_0
)
{
	.reg .pred 	%p<4>;
	.reg .s32 	%r<8>;
	.reg .f32 	%f<33>;


	ld.param.u32 	%r1, [___tanhu_param_0];
	cvt.rn.f32.u32	%f1, %r1;
	abs.f32 	%f2, %f1;
	setp.ltu.f32	%p1, %f2, 0f3F0CCCCD;
	@%p1 bra 	BB19_2;

	add.f32 	%f10, %f2, %f2;
	mul.f32 	%f11, %f10, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f12, %f11;
	mov.f32 	%f13, 0fBF317200;
	fma.rn.f32 	%f14, %f12, %f13, %f10;
	mov.f32 	%f15, 0fB5BFBE8E;
	fma.rn.f32 	%f16, %f12, %f15, %f14;
	mul.f32 	%f7, %f16, 0f3FB8AA3B;
	// inline asm
	ex2.approx.ftz.f32 %f6,%f7;
	// inline asm
	ex2.approx.f32 	%f17, %f12;
	mov.f32 	%f18, 0f3F800000;
	fma.rn.f32 	%f9, %f6, %f17, %f18;
	// inline asm
	rcp.approx.ftz.f32 %f8,%f9;
	// inline asm
	mov.f32 	%f19, 0fC0000000;
	fma.rn.f32 	%f20, %f8, %f19, %f18;
	mov.b32 	 %r2, %f20;
	setp.ltu.f32	%p2, %f2, 0f42B00000;
	selp.b32	%r3, %r2, 1065353216, %p2;
	mov.b32 	 %r4, %f1;
	and.b32  	%r5, %r4, -2147483648;
	or.b32  	%r6, %r3, %r5;
	mov.b32 	 %f32, %r6;
	bra.uni 	BB19_3;

BB19_2:
	mul.f32 	%f21, %f1, %f1;
	mov.f32 	%f22, 0fBD57BE66;
	mov.f32 	%f23, 0f3C86A81B;
	fma.rn.f32 	%f24, %f23, %f21, %f22;
	mov.f32 	%f25, 0f3E08677B;
	fma.rn.f32 	%f26, %f24, %f21, %f25;
	mov.f32 	%f27, 0fBEAAAA29;
	fma.rn.f32 	%f28, %f26, %f21, %f27;
	mul.f32 	%f29, %f28, %f21;
	fma.rn.f32 	%f30, %f29, %f1, %f1;
	add.f32 	%f31, %f1, %f1;
	setp.eq.f32	%p3, %f1, 0f00000000;
	selp.f32	%f32, %f31, %f30, %p3;

BB19_3:
	cvt.rzi.u32.f32	%r7, %f32;
	st.param.b32	[funj_retval0+0], %r7;
	ret;
}

.visible .func  (.param .b32 funj_retval0) ___tanhj(
	.param .b32 ___tanhj_param_0
)
{
	.reg .pred 	%p<4>;
	.reg .s16 	%rs<3>;
	.reg .s32 	%r<8>;
	.reg .f32 	%f<33>;


	ld.param.s8 	%rs1, [___tanhj_param_0];
	cvt.rn.f32.s16	%f1, %rs1;
	abs.f32 	%f2, %f1;
	setp.ltu.f32	%p1, %f2, 0f3F0CCCCD;
	@%p1 bra 	BB20_2;

	add.f32 	%f10, %f2, %f2;
	mul.f32 	%f11, %f10, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f12, %f11;
	mov.f32 	%f13, 0fBF317200;
	fma.rn.f32 	%f14, %f12, %f13, %f10;
	mov.f32 	%f15, 0fB5BFBE8E;
	fma.rn.f32 	%f16, %f12, %f15, %f14;
	mul.f32 	%f7, %f16, 0f3FB8AA3B;
	// inline asm
	ex2.approx.ftz.f32 %f6,%f7;
	// inline asm
	ex2.approx.f32 	%f17, %f12;
	mov.f32 	%f18, 0f3F800000;
	fma.rn.f32 	%f9, %f6, %f17, %f18;
	// inline asm
	rcp.approx.ftz.f32 %f8,%f9;
	// inline asm
	mov.f32 	%f19, 0fC0000000;
	fma.rn.f32 	%f20, %f8, %f19, %f18;
	mov.b32 	 %r1, %f20;
	setp.ltu.f32	%p2, %f2, 0f42B00000;
	selp.b32	%r2, %r1, 1065353216, %p2;
	mov.b32 	 %r3, %f1;
	and.b32  	%r4, %r3, -2147483648;
	or.b32  	%r5, %r2, %r4;
	mov.b32 	 %f32, %r5;
	bra.uni 	BB20_3;

BB20_2:
	mul.f32 	%f21, %f1, %f1;
	mov.f32 	%f22, 0fBD57BE66;
	mov.f32 	%f23, 0f3C86A81B;
	fma.rn.f32 	%f24, %f23, %f21, %f22;
	mov.f32 	%f25, 0f3E08677B;
	fma.rn.f32 	%f26, %f24, %f21, %f25;
	mov.f32 	%f27, 0fBEAAAA29;
	fma.rn.f32 	%f28, %f26, %f21, %f27;
	mul.f32 	%f29, %f28, %f21;
	fma.rn.f32 	%f30, %f29, %f1, %f1;
	add.f32 	%f31, %f1, %f1;
	and.b16  	%rs2, %rs1, 255;
	setp.eq.s16	%p3, %rs2, 0;
	selp.f32	%f32, %f31, %f30, %p3;

BB20_3:
	cvt.rzi.s32.f32	%r6, %f32;
	cvt.s32.s8 	%r7, %r6;
	st.param.b32	[funj_retval0+0], %r7;
	ret;
}

.visible .func  (.param .b32 funj_retval0) ___tanvv(
	.param .b32 ___tanvv_param_0
)
{
	.reg .pred 	%p<4>;
	.reg .s16 	%rs<2>;
	.reg .s32 	%r<8>;
	.reg .f32 	%f<33>;


	ld.param.u8 	%rs1, [___tanvv_param_0];
	cvt.rn.f32.u16	%f1, %rs1;
	abs.f32 	%f2, %f1;
	setp.ltu.f32	%p1, %f2, 0f3F0CCCCD;
	@%p1 bra 	BB21_2;

	add.f32 	%f10, %f2, %f2;
	mul.f32 	%f11, %f10, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f12, %f11;
	mov.f32 	%f13, 0fBF317200;
	fma.rn.f32 	%f14, %f12, %f13, %f10;
	mov.f32 	%f15, 0fB5BFBE8E;
	fma.rn.f32 	%f16, %f12, %f15, %f14;
	mul.f32 	%f7, %f16, 0f3FB8AA3B;
	// inline asm
	ex2.approx.ftz.f32 %f6,%f7;
	// inline asm
	ex2.approx.f32 	%f17, %f12;
	mov.f32 	%f18, 0f3F800000;
	fma.rn.f32 	%f9, %f6, %f17, %f18;
	// inline asm
	rcp.approx.ftz.f32 %f8,%f9;
	// inline asm
	mov.f32 	%f19, 0fC0000000;
	fma.rn.f32 	%f20, %f8, %f19, %f18;
	mov.b32 	 %r1, %f20;
	setp.ltu.f32	%p2, %f2, 0f42B00000;
	selp.b32	%r2, %r1, 1065353216, %p2;
	mov.b32 	 %r3, %f1;
	and.b32  	%r4, %r3, -2147483648;
	or.b32  	%r5, %r2, %r4;
	mov.b32 	 %f32, %r5;
	bra.uni 	BB21_3;

BB21_2:
	mul.f32 	%f21, %f1, %f1;
	mov.f32 	%f22, 0fBD57BE66;
	mov.f32 	%f23, 0f3C86A81B;
	fma.rn.f32 	%f24, %f23, %f21, %f22;
	mov.f32 	%f25, 0f3E08677B;
	fma.rn.f32 	%f26, %f24, %f21, %f25;
	mov.f32 	%f27, 0fBEAAAA29;
	fma.rn.f32 	%f28, %f26, %f21, %f27;
	mul.f32 	%f29, %f28, %f21;
	fma.rn.f32 	%f30, %f29, %f1, %f1;
	add.f32 	%f31, %f1, %f1;
	setp.eq.s16	%p3, %rs1, 0;
	selp.f32	%f32, %f31, %f30, %p3;

BB21_3:
	cvt.rzi.u32.f32	%r6, %f32;
	and.b32  	%r7, %r6, 255;
	st.param.b32	[funj_retval0+0], %r7;
	ret;
}

.visible .func  (.param .b64 funj_retval0) ___tanhd(
	.param .b64 ___tanhd_param_0
)
{
	.reg .pred 	%p<5>;
	.reg .s32 	%r<20>;
	.reg .f64 	%fd<81>;


	ld.param.f64 	%fd9, [___tanhd_param_0];
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r1}, %fd9;
	}
	and.b32  	%r2, %r1, 2147483647;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r6, %temp}, %fd9;
	}
	mov.b64 	%fd1, {%r6, %r2};
	setp.ltu.f64	%p1, %fd1, 0d3FE199999999999A;
	@%p1 bra 	BB22_5;

	add.f64 	%fd10, %fd1, %fd1;
	mov.f64 	%fd11, 0d3FF71547652B82FE;
	mul.rn.f64 	%fd12, %fd10, %fd11;
	mov.f64 	%fd13, 0d4338000000000000;
	add.rn.f64 	%fd14, %fd12, %fd13;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r3, %temp}, %fd14;
	}
	mov.f64 	%fd15, 0dC338000000000000;
	add.rn.f64 	%fd16, %fd14, %fd15;
	mov.f64 	%fd17, 0dBFE62E42FEFA39EF;
	fma.rn.f64 	%fd18, %fd16, %fd17, %fd10;
	mov.f64 	%fd19, 0dBC7ABC9E3B39803F;
	fma.rn.f64 	%fd20, %fd16, %fd19, %fd18;
	mov.f64 	%fd21, 0d3E5AF86D8EBD13CD;
	mov.f64 	%fd22, 0d3E21F4076ACD15B6;
	fma.rn.f64 	%fd23, %fd22, %fd20, %fd21;
	mov.f64 	%fd24, 0d3E927E5092BA033D;
	fma.rn.f64 	%fd25, %fd23, %fd20, %fd24;
	mov.f64 	%fd26, 0d3EC71DDE6C5F9DA1;
	fma.rn.f64 	%fd27, %fd25, %fd20, %fd26;
	mov.f64 	%fd28, 0d3EFA01A018D034E6;
	fma.rn.f64 	%fd29, %fd27, %fd20, %fd28;
	mov.f64 	%fd30, 0d3F2A01A01B3B6940;
	fma.rn.f64 	%fd31, %fd29, %fd20, %fd30;
	mov.f64 	%fd32, 0d3F56C16C16C1B5DD;
	fma.rn.f64 	%fd33, %fd31, %fd20, %fd32;
	mov.f64 	%fd34, 0d3F8111111110F74D;
	fma.rn.f64 	%fd35, %fd33, %fd20, %fd34;
	mov.f64 	%fd36, 0d3FA555555555554D;
	fma.rn.f64 	%fd37, %fd35, %fd20, %fd36;
	mov.f64 	%fd38, 0d3FC5555555555557;
	fma.rn.f64 	%fd39, %fd37, %fd20, %fd38;
	mov.f64 	%fd40, 0d3FE0000000000000;
	fma.rn.f64 	%fd41, %fd39, %fd20, %fd40;
	mul.f64 	%fd42, %fd41, %fd20;
	fma.rn.f64 	%fd2, %fd42, %fd20, %fd20;
	shl.b32 	%r4, %r3, 20;
	add.s32 	%r5, %r4, 1072693248;
	abs.s32 	%r7, %r3;
	setp.lt.s32	%p2, %r7, 1021;
	@%p2 bra 	BB22_3;

	add.s32 	%r8, %r4, 1130364928;
	setp.lt.s32	%p3, %r3, 0;
	mov.u32 	%r9, 0;
	selp.b32	%r10, %r8, %r5, %p3;
	shr.s32 	%r11, %r3, 31;
	add.s32 	%r12, %r11, 1073741824;
	and.b32  	%r13, %r12, -57671680;
	add.s32 	%r14, %r10, -1048576;
	mov.b64 	%fd43, {%r9, %r13};
	fma.rn.f64 	%fd44, %fd2, %fd43, %fd43;
	mov.b64 	%fd45, {%r9, %r14};
	mul.f64 	%fd79, %fd44, %fd45;
	bra.uni 	BB22_4;

BB22_3:
	mov.u32 	%r15, 0;
	mov.b64 	%fd46, {%r15, %r5};
	fma.rn.f64 	%fd79, %fd2, %fd46, %fd46;

BB22_4:
	add.f64 	%fd48, %fd79, 0d3FF0000000000000;
	mov.f64 	%fd49, 0d3FF0000000000000;
	// inline asm
	rcp.approx.ftz.f64 %fd47,%fd48;
	// inline asm
	neg.f64 	%fd50, %fd48;
	fma.rn.f64 	%fd51, %fd50, %fd47, %fd49;
	fma.rn.f64 	%fd52, %fd51, %fd51, %fd51;
	fma.rn.f64 	%fd53, %fd52, %fd47, %fd47;
	neg.f64 	%fd54, %fd53;
	mov.f64 	%fd55, 0d4000000000000000;
	fma.rn.f64 	%fd56, %fd55, %fd54, %fd49;
	setp.gt.u32	%p4, %r2, 1077936127;
	selp.f64	%fd80, 0d3FF0000000000000, %fd56, %p4;
	bra.uni 	BB22_6;

BB22_5:
	mul.f64 	%fd57, %fd9, %fd9;
	mov.f64 	%fd58, 0dBF2B9093D89F0E23;
	mov.f64 	%fd59, 0d3F0ABFFC9B5786C4;
	fma.rn.f64 	%fd60, %fd59, %fd57, %fd58;
	mov.f64 	%fd61, 0d3F42FA2744C30B61;
	fma.rn.f64 	%fd62, %fd60, %fd57, %fd61;
	mov.f64 	%fd63, 0dBF57CF3B9C1E491D;
	fma.rn.f64 	%fd64, %fd62, %fd57, %fd63;
	mov.f64 	%fd65, 0d3F6D6C61D450119A;
	fma.rn.f64 	%fd66, %fd64, %fd57, %fd65;
	mov.f64 	%fd67, 0dBF8226DDD44294F5;
	fma.rn.f64 	%fd68, %fd66, %fd57, %fd67;
	mov.f64 	%fd69, 0d3F9664F45C2B04A6;
	fma.rn.f64 	%fd70, %fd68, %fd57, %fd69;
	mov.f64 	%fd71, 0dBFABA1BA1AD70754;
	fma.rn.f64 	%fd72, %fd70, %fd57, %fd71;
	mov.f64 	%fd73, 0d3FC111111110295E;
	fma.rn.f64 	%fd74, %fd72, %fd57, %fd73;
	mov.f64 	%fd75, 0dBFD555555555549F;
	fma.rn.f64 	%fd76, %fd74, %fd57, %fd75;
	mul.f64 	%fd77, %fd76, %fd57;
	fma.rn.f64 	%fd80, %fd77, %fd9, %fd9;

BB22_6:
	and.b32  	%r16, %r1, -2147483648;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r17}, %fd80;
	}
	or.b32  	%r18, %r17, %r16;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r19, %temp}, %fd80;
	}
	mov.b64 	%fd78, {%r19, %r18};
	st.param.f64	[funj_retval0+0], %fd78;
	ret;
}

.visible .func  (.param .b32 funj_retval0) ___asinhs(
	.param .b32 ___asinhs_param_0
)
{
	.reg .pred 	%p<11>;
	.reg .s32 	%r<9>;
	.reg .f32 	%f<62>;


	ld.param.f32 	%f9, [___asinhs_param_0];
	abs.f32 	%f1, %f9;
	setp.gt.f32	%p1, %f1, 0f7E800000;
	@%p1 bra 	BB23_6;

	rcp.rn.f32 	%f12, %f1;
	mov.f32 	%f13, 0f3F800000;
	fma.rn.f32 	%f14, %f12, %f12, %f13;
	sqrt.rn.f32 	%f15, %f14;
	add.f32 	%f11, %f12, %f15;
	// inline asm
	rcp.approx.ftz.f32 %f10,%f11;
	// inline asm
	fma.rn.f32 	%f2, %f1, %f10, %f1;
	setp.le.f32	%p2, %f2, 0f3F266666;
	setp.ge.f32	%p3, %f2, 0fBEC9BA5E;
	and.pred  	%p4, %p3, %p2;
	@%p4 bra 	BB23_5;

	add.f32 	%f3, %f2, 0f3F800000;
	setp.gt.f32	%p5, %f3, 0f00000000;
	setp.lt.f32	%p6, %f3, 0f7F800000;
	and.pred  	%p7, %p5, %p6;
	@%p7 bra 	BB23_4;

	lg2.approx.f32 	%f61, %f3;
	bra.uni 	BB23_7;

BB23_4:
	setp.lt.f32	%p8, %f3, 0f00800000;
	mul.f32 	%f18, %f3, 0f4B800000;
	selp.f32	%f19, %f18, %f3, %p8;
	selp.f32	%f20, 0fC3170000, 0fC2FE0000, %p8;
	mov.b32 	 %r1, %f19;
	and.b32  	%r2, %r1, 8388607;
	or.b32  	%r3, %r2, 1065353216;
	mov.b32 	 %f21, %r3;
	shr.u32 	%r4, %r1, 23;
	cvt.rn.f32.u32	%f22, %r4;
	add.f32 	%f23, %f20, %f22;
	setp.gt.f32	%p9, %f21, 0f3FAE147B;
	mul.f32 	%f24, %f21, 0f3F000000;
	add.f32 	%f25, %f23, 0f3F800000;
	selp.f32	%f26, %f24, %f21, %p9;
	selp.f32	%f27, %f25, %f23, %p9;
	add.f32 	%f17, %f26, 0f3F800000;
	add.f32 	%f28, %f26, 0fBF800000;
	// inline asm
	rcp.approx.ftz.f32 %f16,%f17;
	// inline asm
	neg.f32 	%f29, %f28;
	mul.f32 	%f30, %f28, %f29;
	mul.rn.f32 	%f31, %f16, %f30;
	add.rn.f32 	%f32, %f28, %f31;
	mul.f32 	%f33, %f32, %f32;
	mov.f32 	%f34, 0f3C4C6A36;
	mov.f32 	%f35, 0f3B1E94E6;
	fma.rn.f32 	%f36, %f35, %f33, %f34;
	mov.f32 	%f37, 0f3DAAAB1A;
	fma.rn.f32 	%f38, %f36, %f33, %f37;
	mul.f32 	%f39, %f38, %f33;
	fma.rn.f32 	%f40, %f39, %f32, %f31;
	add.f32 	%f41, %f40, %f28;
	mov.f32 	%f42, 0f3F317218;
	fma.rn.f32 	%f61, %f27, %f42, %f41;
	bra.uni 	BB23_7;

BB23_5:
	add.f32 	%f43, %f2, 0f40000000;
	div.approx.f32 	%f44, %f2, %f43;
	neg.f32 	%f45, %f2;
	mul.rn.f32 	%f46, %f45, %f44;
	add.rn.f32 	%f47, %f2, %f46;
	mul.f32 	%f48, %f47, %f47;
	mov.f32 	%f49, 0f3C4C4BE0;
	mov.f32 	%f50, 0f3B2063C3;
	fma.rn.f32 	%f51, %f50, %f48, %f49;
	mov.f32 	%f52, 0f3DAAAB50;
	fma.rn.f32 	%f53, %f51, %f48, %f52;
	mul.f32 	%f54, %f53, %f48;
	fma.rn.f32 	%f55, %f54, %f47, %f46;
	add.f32 	%f61, %f55, %f2;
	bra.uni 	BB23_7;

BB23_6:
	lg2.approx.f32 	%f56, %f1;
	mul.f32 	%f57, %f56, 0f3F317218;
	mov.f32 	%f58, 0f3F317218;
	add.rn.f32 	%f61, %f58, %f57;

BB23_7:
	mov.b32 	 %r5, %f9;
	and.b32  	%r6, %r5, -2147483648;
	mov.b32 	 %r7, %f61;
	or.b32  	%r8, %r7, %r6;
	mov.b32 	 %f59, %r8;
	setp.gtu.f32	%p10, %f1, 0f7F800000;
	selp.f32	%f60, %f61, %f59, %p10;
	st.param.f32	[funj_retval0+0], %f60;
	ret;
}

.visible .func  (.param .b32 funj_retval0) ___asinhi(
	.param .b32 ___asinhi_param_0
)
{
	.reg .pred 	%p<11>;
	.reg .s32 	%r<11>;
	.reg .f32 	%f<62>;


	ld.param.u32 	%r1, [___asinhi_param_0];
	cvt.rn.f32.s32	%f1, %r1;
	abs.f32 	%f2, %f1;
	setp.gt.f32	%p1, %f2, 0f7E800000;
	@%p1 bra 	BB24_6;

	rcp.rn.f32 	%f12, %f2;
	mov.f32 	%f13, 0f3F800000;
	fma.rn.f32 	%f14, %f12, %f12, %f13;
	sqrt.rn.f32 	%f15, %f14;
	add.f32 	%f11, %f12, %f15;
	// inline asm
	rcp.approx.ftz.f32 %f10,%f11;
	// inline asm
	fma.rn.f32 	%f3, %f2, %f10, %f2;
	setp.le.f32	%p2, %f3, 0f3F266666;
	setp.ge.f32	%p3, %f3, 0fBEC9BA5E;
	and.pred  	%p4, %p3, %p2;
	@%p4 bra 	BB24_5;

	add.f32 	%f4, %f3, 0f3F800000;
	setp.gt.f32	%p5, %f4, 0f00000000;
	setp.lt.f32	%p6, %f4, 0f7F800000;
	and.pred  	%p7, %p5, %p6;
	@%p7 bra 	BB24_4;

	lg2.approx.f32 	%f61, %f4;
	bra.uni 	BB24_7;

BB24_4:
	setp.lt.f32	%p8, %f4, 0f00800000;
	mul.f32 	%f18, %f4, 0f4B800000;
	selp.f32	%f19, %f18, %f4, %p8;
	selp.f32	%f20, 0fC3170000, 0fC2FE0000, %p8;
	mov.b32 	 %r2, %f19;
	and.b32  	%r3, %r2, 8388607;
	or.b32  	%r4, %r3, 1065353216;
	mov.b32 	 %f21, %r4;
	shr.u32 	%r5, %r2, 23;
	cvt.rn.f32.u32	%f22, %r5;
	add.f32 	%f23, %f20, %f22;
	setp.gt.f32	%p9, %f21, 0f3FAE147B;
	mul.f32 	%f24, %f21, 0f3F000000;
	add.f32 	%f25, %f23, 0f3F800000;
	selp.f32	%f26, %f24, %f21, %p9;
	selp.f32	%f27, %f25, %f23, %p9;
	add.f32 	%f17, %f26, 0f3F800000;
	add.f32 	%f28, %f26, 0fBF800000;
	// inline asm
	rcp.approx.ftz.f32 %f16,%f17;
	// inline asm
	neg.f32 	%f29, %f28;
	mul.f32 	%f30, %f28, %f29;
	mul.rn.f32 	%f31, %f16, %f30;
	add.rn.f32 	%f32, %f28, %f31;
	mul.f32 	%f33, %f32, %f32;
	mov.f32 	%f34, 0f3C4C6A36;
	mov.f32 	%f35, 0f3B1E94E6;
	fma.rn.f32 	%f36, %f35, %f33, %f34;
	mov.f32 	%f37, 0f3DAAAB1A;
	fma.rn.f32 	%f38, %f36, %f33, %f37;
	mul.f32 	%f39, %f38, %f33;
	fma.rn.f32 	%f40, %f39, %f32, %f31;
	add.f32 	%f41, %f40, %f28;
	mov.f32 	%f42, 0f3F317218;
	fma.rn.f32 	%f61, %f27, %f42, %f41;
	bra.uni 	BB24_7;

BB24_5:
	add.f32 	%f43, %f3, 0f40000000;
	div.approx.f32 	%f44, %f3, %f43;
	neg.f32 	%f45, %f3;
	mul.rn.f32 	%f46, %f45, %f44;
	add.rn.f32 	%f47, %f3, %f46;
	mul.f32 	%f48, %f47, %f47;
	mov.f32 	%f49, 0f3C4C4BE0;
	mov.f32 	%f50, 0f3B2063C3;
	fma.rn.f32 	%f51, %f50, %f48, %f49;
	mov.f32 	%f52, 0f3DAAAB50;
	fma.rn.f32 	%f53, %f51, %f48, %f52;
	mul.f32 	%f54, %f53, %f48;
	fma.rn.f32 	%f55, %f54, %f47, %f46;
	add.f32 	%f61, %f55, %f3;
	bra.uni 	BB24_7;

BB24_6:
	lg2.approx.f32 	%f56, %f2;
	mul.f32 	%f57, %f56, 0f3F317218;
	mov.f32 	%f58, 0f3F317218;
	add.rn.f32 	%f61, %f58, %f57;

BB24_7:
	mov.b32 	 %r6, %f1;
	and.b32  	%r7, %r6, -2147483648;
	mov.b32 	 %r8, %f61;
	or.b32  	%r9, %r8, %r7;
	mov.b32 	 %f59, %r9;
	setp.gtu.f32	%p10, %f2, 0f7F800000;
	selp.f32	%f60, %f61, %f59, %p10;
	cvt.rzi.s32.f32	%r10, %f60;
	st.param.b32	[funj_retval0+0], %r10;
	ret;
}

.visible .func  (.param .b32 funj_retval0) ___asinhu(
	.param .b32 ___asinhu_param_0
)
{
	.reg .pred 	%p<11>;
	.reg .s32 	%r<11>;
	.reg .f32 	%f<62>;


	ld.param.u32 	%r1, [___asinhu_param_0];
	cvt.rn.f32.u32	%f1, %r1;
	abs.f32 	%f2, %f1;
	setp.gt.f32	%p1, %f2, 0f7E800000;
	@%p1 bra 	BB25_6;

	rcp.rn.f32 	%f12, %f2;
	mov.f32 	%f13, 0f3F800000;
	fma.rn.f32 	%f14, %f12, %f12, %f13;
	sqrt.rn.f32 	%f15, %f14;
	add.f32 	%f11, %f12, %f15;
	// inline asm
	rcp.approx.ftz.f32 %f10,%f11;
	// inline asm
	fma.rn.f32 	%f3, %f2, %f10, %f2;
	setp.le.f32	%p2, %f3, 0f3F266666;
	setp.ge.f32	%p3, %f3, 0fBEC9BA5E;
	and.pred  	%p4, %p3, %p2;
	@%p4 bra 	BB25_5;

	add.f32 	%f4, %f3, 0f3F800000;
	setp.gt.f32	%p5, %f4, 0f00000000;
	setp.lt.f32	%p6, %f4, 0f7F800000;
	and.pred  	%p7, %p5, %p6;
	@%p7 bra 	BB25_4;

	lg2.approx.f32 	%f61, %f4;
	bra.uni 	BB25_7;

BB25_4:
	setp.lt.f32	%p8, %f4, 0f00800000;
	mul.f32 	%f18, %f4, 0f4B800000;
	selp.f32	%f19, %f18, %f4, %p8;
	selp.f32	%f20, 0fC3170000, 0fC2FE0000, %p8;
	mov.b32 	 %r2, %f19;
	and.b32  	%r3, %r2, 8388607;
	or.b32  	%r4, %r3, 1065353216;
	mov.b32 	 %f21, %r4;
	shr.u32 	%r5, %r2, 23;
	cvt.rn.f32.u32	%f22, %r5;
	add.f32 	%f23, %f20, %f22;
	setp.gt.f32	%p9, %f21, 0f3FAE147B;
	mul.f32 	%f24, %f21, 0f3F000000;
	add.f32 	%f25, %f23, 0f3F800000;
	selp.f32	%f26, %f24, %f21, %p9;
	selp.f32	%f27, %f25, %f23, %p9;
	add.f32 	%f17, %f26, 0f3F800000;
	add.f32 	%f28, %f26, 0fBF800000;
	// inline asm
	rcp.approx.ftz.f32 %f16,%f17;
	// inline asm
	neg.f32 	%f29, %f28;
	mul.f32 	%f30, %f28, %f29;
	mul.rn.f32 	%f31, %f16, %f30;
	add.rn.f32 	%f32, %f28, %f31;
	mul.f32 	%f33, %f32, %f32;
	mov.f32 	%f34, 0f3C4C6A36;
	mov.f32 	%f35, 0f3B1E94E6;
	fma.rn.f32 	%f36, %f35, %f33, %f34;
	mov.f32 	%f37, 0f3DAAAB1A;
	fma.rn.f32 	%f38, %f36, %f33, %f37;
	mul.f32 	%f39, %f38, %f33;
	fma.rn.f32 	%f40, %f39, %f32, %f31;
	add.f32 	%f41, %f40, %f28;
	mov.f32 	%f42, 0f3F317218;
	fma.rn.f32 	%f61, %f27, %f42, %f41;
	bra.uni 	BB25_7;

BB25_5:
	add.f32 	%f43, %f3, 0f40000000;
	div.approx.f32 	%f44, %f3, %f43;
	neg.f32 	%f45, %f3;
	mul.rn.f32 	%f46, %f45, %f44;
	add.rn.f32 	%f47, %f3, %f46;
	mul.f32 	%f48, %f47, %f47;
	mov.f32 	%f49, 0f3C4C4BE0;
	mov.f32 	%f50, 0f3B2063C3;
	fma.rn.f32 	%f51, %f50, %f48, %f49;
	mov.f32 	%f52, 0f3DAAAB50;
	fma.rn.f32 	%f53, %f51, %f48, %f52;
	mul.f32 	%f54, %f53, %f48;
	fma.rn.f32 	%f55, %f54, %f47, %f46;
	add.f32 	%f61, %f55, %f3;
	bra.uni 	BB25_7;

BB25_6:
	lg2.approx.f32 	%f56, %f2;
	mul.f32 	%f57, %f56, 0f3F317218;
	mov.f32 	%f58, 0f3F317218;
	add.rn.f32 	%f61, %f58, %f57;

BB25_7:
	mov.b32 	 %r6, %f1;
	and.b32  	%r7, %r6, -2147483648;
	mov.b32 	 %r8, %f61;
	or.b32  	%r9, %r8, %r7;
	mov.b32 	 %f59, %r9;
	setp.gtu.f32	%p10, %f2, 0f7F800000;
	selp.f32	%f60, %f61, %f59, %p10;
	cvt.rzi.u32.f32	%r10, %f60;
	st.param.b32	[funj_retval0+0], %r10;
	ret;
}

.visible .func  (.param .b32 funj_retval0) ___asinhj(
	.param .b32 ___asinhj_param_0
)
{
	.reg .pred 	%p<11>;
	.reg .s16 	%rs<2>;
	.reg .s32 	%r<11>;
	.reg .f32 	%f<62>;


	ld.param.s8 	%rs1, [___asinhj_param_0];
	cvt.rn.f32.s16	%f1, %rs1;
	abs.f32 	%f2, %f1;
	setp.gt.f32	%p1, %f2, 0f7E800000;
	@%p1 bra 	BB26_6;

	rcp.rn.f32 	%f12, %f2;
	mov.f32 	%f13, 0f3F800000;
	fma.rn.f32 	%f14, %f12, %f12, %f13;
	sqrt.rn.f32 	%f15, %f14;
	add.f32 	%f11, %f12, %f15;
	// inline asm
	rcp.approx.ftz.f32 %f10,%f11;
	// inline asm
	fma.rn.f32 	%f3, %f2, %f10, %f2;
	setp.le.f32	%p2, %f3, 0f3F266666;
	setp.ge.f32	%p3, %f3, 0fBEC9BA5E;
	and.pred  	%p4, %p3, %p2;
	@%p4 bra 	BB26_5;

	add.f32 	%f4, %f3, 0f3F800000;
	setp.gt.f32	%p5, %f4, 0f00000000;
	setp.lt.f32	%p6, %f4, 0f7F800000;
	and.pred  	%p7, %p5, %p6;
	@%p7 bra 	BB26_4;

	lg2.approx.f32 	%f61, %f4;
	bra.uni 	BB26_7;

BB26_4:
	setp.lt.f32	%p8, %f4, 0f00800000;
	mul.f32 	%f18, %f4, 0f4B800000;
	selp.f32	%f19, %f18, %f4, %p8;
	selp.f32	%f20, 0fC3170000, 0fC2FE0000, %p8;
	mov.b32 	 %r1, %f19;
	and.b32  	%r2, %r1, 8388607;
	or.b32  	%r3, %r2, 1065353216;
	mov.b32 	 %f21, %r3;
	shr.u32 	%r4, %r1, 23;
	cvt.rn.f32.u32	%f22, %r4;
	add.f32 	%f23, %f20, %f22;
	setp.gt.f32	%p9, %f21, 0f3FAE147B;
	mul.f32 	%f24, %f21, 0f3F000000;
	add.f32 	%f25, %f23, 0f3F800000;
	selp.f32	%f26, %f24, %f21, %p9;
	selp.f32	%f27, %f25, %f23, %p9;
	add.f32 	%f17, %f26, 0f3F800000;
	add.f32 	%f28, %f26, 0fBF800000;
	// inline asm
	rcp.approx.ftz.f32 %f16,%f17;
	// inline asm
	neg.f32 	%f29, %f28;
	mul.f32 	%f30, %f28, %f29;
	mul.rn.f32 	%f31, %f16, %f30;
	add.rn.f32 	%f32, %f28, %f31;
	mul.f32 	%f33, %f32, %f32;
	mov.f32 	%f34, 0f3C4C6A36;
	mov.f32 	%f35, 0f3B1E94E6;
	fma.rn.f32 	%f36, %f35, %f33, %f34;
	mov.f32 	%f37, 0f3DAAAB1A;
	fma.rn.f32 	%f38, %f36, %f33, %f37;
	mul.f32 	%f39, %f38, %f33;
	fma.rn.f32 	%f40, %f39, %f32, %f31;
	add.f32 	%f41, %f40, %f28;
	mov.f32 	%f42, 0f3F317218;
	fma.rn.f32 	%f61, %f27, %f42, %f41;
	bra.uni 	BB26_7;

BB26_5:
	add.f32 	%f43, %f3, 0f40000000;
	div.approx.f32 	%f44, %f3, %f43;
	neg.f32 	%f45, %f3;
	mul.rn.f32 	%f46, %f45, %f44;
	add.rn.f32 	%f47, %f3, %f46;
	mul.f32 	%f48, %f47, %f47;
	mov.f32 	%f49, 0f3C4C4BE0;
	mov.f32 	%f50, 0f3B2063C3;
	fma.rn.f32 	%f51, %f50, %f48, %f49;
	mov.f32 	%f52, 0f3DAAAB50;
	fma.rn.f32 	%f53, %f51, %f48, %f52;
	mul.f32 	%f54, %f53, %f48;
	fma.rn.f32 	%f55, %f54, %f47, %f46;
	add.f32 	%f61, %f55, %f3;
	bra.uni 	BB26_7;

BB26_6:
	lg2.approx.f32 	%f56, %f2;
	mul.f32 	%f57, %f56, 0f3F317218;
	mov.f32 	%f58, 0f3F317218;
	add.rn.f32 	%f61, %f58, %f57;

BB26_7:
	mov.b32 	 %r5, %f1;
	and.b32  	%r6, %r5, -2147483648;
	mov.b32 	 %r7, %f61;
	or.b32  	%r8, %r7, %r6;
	mov.b32 	 %f59, %r8;
	setp.gtu.f32	%p10, %f2, 0f7F800000;
	selp.f32	%f60, %f61, %f59, %p10;
	cvt.rzi.s32.f32	%r9, %f60;
	cvt.s32.s8 	%r10, %r9;
	st.param.b32	[funj_retval0+0], %r10;
	ret;
}

.visible .func  (.param .b32 funj_retval0) ___asinvv(
	.param .b32 ___asinvv_param_0
)
{
	.reg .pred 	%p<11>;
	.reg .s16 	%rs<2>;
	.reg .s32 	%r<11>;
	.reg .f32 	%f<62>;


	ld.param.u8 	%rs1, [___asinvv_param_0];
	cvt.rn.f32.u16	%f1, %rs1;
	abs.f32 	%f2, %f1;
	setp.gt.f32	%p1, %f2, 0f7E800000;
	@%p1 bra 	BB27_6;

	rcp.rn.f32 	%f12, %f2;
	mov.f32 	%f13, 0f3F800000;
	fma.rn.f32 	%f14, %f12, %f12, %f13;
	sqrt.rn.f32 	%f15, %f14;
	add.f32 	%f11, %f12, %f15;
	// inline asm
	rcp.approx.ftz.f32 %f10,%f11;
	// inline asm
	fma.rn.f32 	%f3, %f2, %f10, %f2;
	setp.le.f32	%p2, %f3, 0f3F266666;
	setp.ge.f32	%p3, %f3, 0fBEC9BA5E;
	and.pred  	%p4, %p3, %p2;
	@%p4 bra 	BB27_5;

	add.f32 	%f4, %f3, 0f3F800000;
	setp.gt.f32	%p5, %f4, 0f00000000;
	setp.lt.f32	%p6, %f4, 0f7F800000;
	and.pred  	%p7, %p5, %p6;
	@%p7 bra 	BB27_4;

	lg2.approx.f32 	%f61, %f4;
	bra.uni 	BB27_7;

BB27_4:
	setp.lt.f32	%p8, %f4, 0f00800000;
	mul.f32 	%f18, %f4, 0f4B800000;
	selp.f32	%f19, %f18, %f4, %p8;
	selp.f32	%f20, 0fC3170000, 0fC2FE0000, %p8;
	mov.b32 	 %r1, %f19;
	and.b32  	%r2, %r1, 8388607;
	or.b32  	%r3, %r2, 1065353216;
	mov.b32 	 %f21, %r3;
	shr.u32 	%r4, %r1, 23;
	cvt.rn.f32.u32	%f22, %r4;
	add.f32 	%f23, %f20, %f22;
	setp.gt.f32	%p9, %f21, 0f3FAE147B;
	mul.f32 	%f24, %f21, 0f3F000000;
	add.f32 	%f25, %f23, 0f3F800000;
	selp.f32	%f26, %f24, %f21, %p9;
	selp.f32	%f27, %f25, %f23, %p9;
	add.f32 	%f17, %f26, 0f3F800000;
	add.f32 	%f28, %f26, 0fBF800000;
	// inline asm
	rcp.approx.ftz.f32 %f16,%f17;
	// inline asm
	neg.f32 	%f29, %f28;
	mul.f32 	%f30, %f28, %f29;
	mul.rn.f32 	%f31, %f16, %f30;
	add.rn.f32 	%f32, %f28, %f31;
	mul.f32 	%f33, %f32, %f32;
	mov.f32 	%f34, 0f3C4C6A36;
	mov.f32 	%f35, 0f3B1E94E6;
	fma.rn.f32 	%f36, %f35, %f33, %f34;
	mov.f32 	%f37, 0f3DAAAB1A;
	fma.rn.f32 	%f38, %f36, %f33, %f37;
	mul.f32 	%f39, %f38, %f33;
	fma.rn.f32 	%f40, %f39, %f32, %f31;
	add.f32 	%f41, %f40, %f28;
	mov.f32 	%f42, 0f3F317218;
	fma.rn.f32 	%f61, %f27, %f42, %f41;
	bra.uni 	BB27_7;

BB27_5:
	add.f32 	%f43, %f3, 0f40000000;
	div.approx.f32 	%f44, %f3, %f43;
	neg.f32 	%f45, %f3;
	mul.rn.f32 	%f46, %f45, %f44;
	add.rn.f32 	%f47, %f3, %f46;
	mul.f32 	%f48, %f47, %f47;
	mov.f32 	%f49, 0f3C4C4BE0;
	mov.f32 	%f50, 0f3B2063C3;
	fma.rn.f32 	%f51, %f50, %f48, %f49;
	mov.f32 	%f52, 0f3DAAAB50;
	fma.rn.f32 	%f53, %f51, %f48, %f52;
	mul.f32 	%f54, %f53, %f48;
	fma.rn.f32 	%f55, %f54, %f47, %f46;
	add.f32 	%f61, %f55, %f3;
	bra.uni 	BB27_7;

BB27_6:
	lg2.approx.f32 	%f56, %f2;
	mul.f32 	%f57, %f56, 0f3F317218;
	mov.f32 	%f58, 0f3F317218;
	add.rn.f32 	%f61, %f58, %f57;

BB27_7:
	mov.b32 	 %r5, %f1;
	and.b32  	%r6, %r5, -2147483648;
	mov.b32 	 %r7, %f61;
	or.b32  	%r8, %r7, %r6;
	mov.b32 	 %f59, %r8;
	setp.gtu.f32	%p10, %f2, 0f7F800000;
	selp.f32	%f60, %f61, %f59, %p10;
	cvt.rzi.u32.f32	%r9, %f60;
	and.b32  	%r10, %r9, 255;
	st.param.b32	[funj_retval0+0], %r10;
	ret;
}

.visible .func  (.param .b64 funj_retval0) ___asinhd(
	.param .b64 ___asinhd_param_0
)
{
	.reg .pred 	%p<21>;
	.reg .s32 	%r<62>;
	.reg .f64 	%fd<159>;


	ld.param.f64 	%fd20, [___asinhd_param_0];
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r1}, %fd20;
	}
	and.b32  	%r22, %r1, 2147483647;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r23, %temp}, %fd20;
	}
	mov.b64 	%fd1, {%r23, %r22};
	setp.gt.u32	%p1, %r22, 1138753535;
	@%p1 bra 	BB28_15;

	mul.rn.f64 	%fd23, %fd20, %fd20;
	mov.f64 	%fd24, 0d3FF0000000000000;
	fma.rn.f64 	%fd22, %fd20, %fd20, %fd24;
	// inline asm
	rsqrt.approx.ftz.f64 %fd21, %fd22;
	// inline asm
	{
	.reg .b32 %temp; 
	mov.b64 	{%r24, %temp}, %fd21;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r25}, %fd21;
	}
	add.s32 	%r26, %r25, -1048576;
	mov.b64 	%fd25, {%r24, %r26};
	mul.f64 	%fd26, %fd22, %fd21;
	neg.f64 	%fd27, %fd26;
	fma.rn.f64 	%fd28, %fd26, %fd27, %fd22;
	fma.rn.f64 	%fd29, %fd28, %fd25, %fd26;
	neg.f64 	%fd30, %fd29;
	fma.rn.f64 	%fd31, %fd21, %fd30, %fd24;
	fma.rn.f64 	%fd32, %fd31, %fd25, %fd25;
	fma.rn.f64 	%fd33, %fd29, %fd30, %fd22;
	fma.rn.f64 	%fd34, %fd33, %fd32, %fd29;
	add.f64 	%fd35, %fd34, 0d3FF0000000000000;
	div.rn.f64 	%fd36, %fd23, %fd35;
	add.f64 	%fd2, %fd1, %fd36;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r27}, %fd2;
	}
	setp.lt.u32	%p2, %r27, 1071994197;
	setp.lt.s32	%p3, %r27, -1076258407;
	or.pred  	%p4, %p2, %p3;
	@%p4 bra 	BB28_14;

	add.f64 	%fd3, %fd2, 0d3FF0000000000000;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r54}, %fd3;
	}
	setp.gt.f64	%p5, %fd3, 0d0000000000000000;
	setp.lt.s32	%p6, %r54, 2146435072;
	and.pred  	%p7, %p5, %p6;
	@%p7 bra 	BB28_8;

	abs.f64 	%fd37, %fd3;
	setp.gtu.f64	%p8, %fd37, 0d7FF0000000000000;
	@%p8 bra 	BB28_7;

	setp.neu.f64	%p9, %fd3, 0d0000000000000000;
	@%p9 bra 	BB28_6;

	mov.f64 	%fd158, 0dFFF0000000000000;
	bra.uni 	BB28_28;

BB28_6:
	setp.eq.f64	%p10, %fd3, 0d7FF0000000000000;
	selp.f64	%fd158, %fd3, 0dFFF8000000000000, %p10;
	bra.uni 	BB28_28;

BB28_7:
	add.f64 	%fd158, %fd3, %fd3;
	bra.uni 	BB28_28;

BB28_8:
	{
	.reg .b32 %temp; 
	mov.b64 	{%r55, %temp}, %fd3;
	}
	setp.lt.s32	%p11, %r54, 1048576;
	@%p11 bra 	BB28_10;

	mov.u32 	%r56, -1023;
	bra.uni 	BB28_11;

BB28_10:
	mul.f64 	%fd39, %fd3, 0d4350000000000000;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r54}, %fd39;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%r55, %temp}, %fd39;
	}
	mov.u32 	%r56, -1077;

BB28_11:
	shr.u32 	%r30, %r54, 20;
	add.s32 	%r57, %r56, %r30;
	and.b32  	%r31, %r54, -2146435073;
	or.b32  	%r32, %r31, 1072693248;
	mov.b64 	%fd155, {%r55, %r32};
	setp.lt.s32	%p12, %r32, 1073127583;
	@%p12 bra 	BB28_13;

	{
	.reg .b32 %temp; 
	mov.b64 	{%r33, %temp}, %fd155;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r34}, %fd155;
	}
	add.s32 	%r35, %r34, -1048576;
	mov.b64 	%fd155, {%r33, %r35};
	add.s32 	%r57, %r57, 1;

BB28_13:
	add.f64 	%fd41, %fd155, 0d3FF0000000000000;
	// inline asm
	rcp.approx.ftz.f64 %fd40,%fd41;
	// inline asm
	neg.f64 	%fd43, %fd41;
	fma.rn.f64 	%fd44, %fd43, %fd40, %fd24;
	fma.rn.f64 	%fd45, %fd44, %fd44, %fd44;
	fma.rn.f64 	%fd46, %fd45, %fd40, %fd40;
	add.f64 	%fd47, %fd155, 0dBFF0000000000000;
	mul.f64 	%fd48, %fd47, %fd46;
	fma.rn.f64 	%fd49, %fd47, %fd46, %fd48;
	mul.f64 	%fd50, %fd49, %fd49;
	mov.f64 	%fd51, 0d3ED0EE258B7A8B04;
	mov.f64 	%fd52, 0d3EB1380B3AE80F1E;
	fma.rn.f64 	%fd53, %fd52, %fd50, %fd51;
	mov.f64 	%fd54, 0d3EF3B2669F02676F;
	fma.rn.f64 	%fd55, %fd53, %fd50, %fd54;
	mov.f64 	%fd56, 0d3F1745CBA9AB0956;
	fma.rn.f64 	%fd57, %fd55, %fd50, %fd56;
	mov.f64 	%fd58, 0d3F3C71C72D1B5154;
	fma.rn.f64 	%fd59, %fd57, %fd50, %fd58;
	mov.f64 	%fd60, 0d3F624924923BE72D;
	fma.rn.f64 	%fd61, %fd59, %fd50, %fd60;
	mov.f64 	%fd62, 0d3F8999999999A3C4;
	fma.rn.f64 	%fd63, %fd61, %fd50, %fd62;
	mov.f64 	%fd64, 0d3FB5555555555554;
	fma.rn.f64 	%fd65, %fd63, %fd50, %fd64;
	sub.f64 	%fd66, %fd47, %fd49;
	add.f64 	%fd67, %fd66, %fd66;
	neg.f64 	%fd68, %fd49;
	fma.rn.f64 	%fd69, %fd68, %fd47, %fd67;
	mul.f64 	%fd70, %fd46, %fd69;
	mul.f64 	%fd71, %fd65, %fd50;
	fma.rn.f64 	%fd72, %fd71, %fd49, %fd70;
	xor.b32  	%r36, %r57, -2147483648;
	mov.u32 	%r37, -2147483648;
	mov.u32 	%r38, 1127219200;
	mov.b64 	%fd73, {%r36, %r38};
	mov.b64 	%fd74, {%r37, %r38};
	sub.f64 	%fd75, %fd73, %fd74;
	mov.f64 	%fd76, 0d3FE62E42FEFA39EF;
	fma.rn.f64 	%fd77, %fd75, %fd76, %fd49;
	neg.f64 	%fd78, %fd75;
	fma.rn.f64 	%fd79, %fd78, %fd76, %fd77;
	sub.f64 	%fd80, %fd79, %fd49;
	sub.f64 	%fd81, %fd72, %fd80;
	mov.f64 	%fd82, 0d3C7ABC9E3B39803F;
	fma.rn.f64 	%fd83, %fd75, %fd82, %fd81;
	add.f64 	%fd158, %fd77, %fd83;
	bra.uni 	BB28_28;

BB28_14:
	add.f64 	%fd84, %fd2, 0d4000000000000000;
	div.rn.f64 	%fd85, %fd2, %fd84;
	neg.f64 	%fd86, %fd2;
	mul.f64 	%fd87, %fd85, %fd86;
	add.f64 	%fd88, %fd2, %fd87;
	mul.f64 	%fd89, %fd88, %fd88;
	mov.f64 	%fd90, 0d3ED087FFCEB2DC44;
	mov.f64 	%fd91, 0d3EB372FB2FBE14B5;
	fma.rn.f64 	%fd92, %fd91, %fd89, %fd90;
	mov.f64 	%fd93, 0d3EF3B9FF890F468C;
	fma.rn.f64 	%fd94, %fd92, %fd89, %fd93;
	mov.f64 	%fd95, 0d3F17457EFD51BAF8;
	fma.rn.f64 	%fd96, %fd94, %fd89, %fd95;
	mov.f64 	%fd97, 0d3F3C71C8DE3CE825;
	fma.rn.f64 	%fd98, %fd96, %fd89, %fd97;
	mov.f64 	%fd99, 0d3F6249248FA4661F;
	fma.rn.f64 	%fd100, %fd98, %fd89, %fd99;
	mov.f64 	%fd101, 0d3F899999999D70C4;
	fma.rn.f64 	%fd102, %fd100, %fd89, %fd101;
	mov.f64 	%fd103, 0d3FB5555555555462;
	fma.rn.f64 	%fd104, %fd102, %fd89, %fd103;
	mul.f64 	%fd105, %fd104, %fd89;
	fma.rn.f64 	%fd106, %fd105, %fd88, %fd87;
	add.f64 	%fd158, %fd106, %fd2;
	bra.uni 	BB28_28;

BB28_15:
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r58}, %fd1;
	}
	setp.lt.s32	%p13, %r58, 2146435072;
	setp.gt.f64	%p14, %fd1, 0d0000000000000000;
	and.pred  	%p15, %p14, %p13;
	@%p15 bra 	BB28_21;

	abs.f64 	%fd107, %fd1;
	setp.gtu.f64	%p16, %fd107, 0d7FF0000000000000;
	@%p16 bra 	BB28_20;

	setp.neu.f64	%p17, %fd1, 0d0000000000000000;
	@%p17 bra 	BB28_19;

	mov.f64 	%fd157, 0dFFF0000000000000;
	bra.uni 	BB28_27;

BB28_19:
	setp.eq.f64	%p18, %fd1, 0d7FF0000000000000;
	selp.f64	%fd157, %fd1, 0dFFF8000000000000, %p18;
	bra.uni 	BB28_27;

BB28_20:
	add.f64 	%fd157, %fd1, %fd1;
	bra.uni 	BB28_27;

BB28_21:
	{
	.reg .b32 %temp; 
	mov.b64 	{%r59, %temp}, %fd1;
	}
	setp.lt.s32	%p19, %r58, 1048576;
	@%p19 bra 	BB28_23;

	mov.u32 	%r60, -1023;
	bra.uni 	BB28_24;

BB28_23:
	mul.f64 	%fd109, %fd1, 0d4350000000000000;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r58}, %fd109;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%r59, %temp}, %fd109;
	}
	mov.u32 	%r60, -1077;

BB28_24:
	shr.u32 	%r41, %r58, 20;
	add.s32 	%r61, %r60, %r41;
	and.b32  	%r42, %r58, -2146435073;
	or.b32  	%r43, %r42, 1072693248;
	mov.b64 	%fd156, {%r59, %r43};
	setp.lt.s32	%p20, %r43, 1073127583;
	@%p20 bra 	BB28_26;

	{
	.reg .b32 %temp; 
	mov.b64 	{%r44, %temp}, %fd156;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r45}, %fd156;
	}
	add.s32 	%r46, %r45, -1048576;
	mov.b64 	%fd156, {%r44, %r46};
	add.s32 	%r61, %r61, 1;

BB28_26:
	add.f64 	%fd111, %fd156, 0d3FF0000000000000;
	mov.f64 	%fd112, 0d3FF0000000000000;
	// inline asm
	rcp.approx.ftz.f64 %fd110,%fd111;
	// inline asm
	neg.f64 	%fd113, %fd111;
	fma.rn.f64 	%fd114, %fd113, %fd110, %fd112;
	fma.rn.f64 	%fd115, %fd114, %fd114, %fd114;
	fma.rn.f64 	%fd116, %fd115, %fd110, %fd110;
	add.f64 	%fd117, %fd156, 0dBFF0000000000000;
	mul.f64 	%fd118, %fd117, %fd116;
	fma.rn.f64 	%fd119, %fd117, %fd116, %fd118;
	mul.f64 	%fd120, %fd119, %fd119;
	mov.f64 	%fd121, 0d3ED0EE258B7A8B04;
	mov.f64 	%fd122, 0d3EB1380B3AE80F1E;
	fma.rn.f64 	%fd123, %fd122, %fd120, %fd121;
	mov.f64 	%fd124, 0d3EF3B2669F02676F;
	fma.rn.f64 	%fd125, %fd123, %fd120, %fd124;
	mov.f64 	%fd126, 0d3F1745CBA9AB0956;
	fma.rn.f64 	%fd127, %fd125, %fd120, %fd126;
	mov.f64 	%fd128, 0d3F3C71C72D1B5154;
	fma.rn.f64 	%fd129, %fd127, %fd120, %fd128;
	mov.f64 	%fd130, 0d3F624924923BE72D;
	fma.rn.f64 	%fd131, %fd129, %fd120, %fd130;
	mov.f64 	%fd132, 0d3F8999999999A3C4;
	fma.rn.f64 	%fd133, %fd131, %fd120, %fd132;
	mov.f64 	%fd134, 0d3FB5555555555554;
	fma.rn.f64 	%fd135, %fd133, %fd120, %fd134;
	sub.f64 	%fd136, %fd117, %fd119;
	add.f64 	%fd137, %fd136, %fd136;
	neg.f64 	%fd138, %fd119;
	fma.rn.f64 	%fd139, %fd138, %fd117, %fd137;
	mul.f64 	%fd140, %fd116, %fd139;
	mul.f64 	%fd141, %fd135, %fd120;
	fma.rn.f64 	%fd142, %fd141, %fd119, %fd140;
	xor.b32  	%r47, %r61, -2147483648;
	mov.u32 	%r48, -2147483648;
	mov.u32 	%r49, 1127219200;
	mov.b64 	%fd143, {%r47, %r49};
	mov.b64 	%fd144, {%r48, %r49};
	sub.f64 	%fd145, %fd143, %fd144;
	mov.f64 	%fd146, 0d3FE62E42FEFA39EF;
	fma.rn.f64 	%fd147, %fd145, %fd146, %fd119;
	neg.f64 	%fd148, %fd145;
	fma.rn.f64 	%fd149, %fd148, %fd146, %fd147;
	sub.f64 	%fd150, %fd149, %fd119;
	sub.f64 	%fd151, %fd142, %fd150;
	mov.f64 	%fd152, 0d3C7ABC9E3B39803F;
	fma.rn.f64 	%fd153, %fd145, %fd152, %fd151;
	add.f64 	%fd157, %fd147, %fd153;

BB28_27:
	add.f64 	%fd158, %fd157, 0d3FE62E42FEFA39EF;

BB28_28:
	and.b32  	%r50, %r1, -2147483648;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r51}, %fd158;
	}
	or.b32  	%r52, %r51, %r50;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r53, %temp}, %fd158;
	}
	mov.b64 	%fd154, {%r53, %r52};
	st.param.f64	[funj_retval0+0], %fd154;
	ret;
}

.visible .func  (.param .b32 funj_retval0) ___acoshs(
	.param .b32 ___acoshs_param_0
)
{
	.reg .pred 	%p<15>;
	.reg .s32 	%r<10>;
	.reg .f32 	%f<85>;


	ld.param.f32 	%f12, [___acoshs_param_0];
	add.f32 	%f1, %f12, 0fBF800000;
	mov.b32 	 %r1, %f1;
	setp.gt.u32	%p1, %r1, 1258291200;
	@%p1 bra 	BB29_6;

	mul.rz.f32 	%f13, %f12, %f1;
	add.rn.f32 	%f14, %f13, %f1;
	sqrt.rn.f32 	%f15, %f14;
	add.f32 	%f2, %f1, %f15;
	setp.le.f32	%p2, %f2, 0f3F266666;
	setp.ge.f32	%p3, %f2, 0fBEC9BA5E;
	and.pred  	%p4, %p3, %p2;
	@%p4 bra 	BB29_5;

	add.f32 	%f3, %f2, 0f3F800000;
	setp.gt.f32	%p5, %f3, 0f00000000;
	setp.lt.f32	%p6, %f3, 0f7F800000;
	and.pred  	%p7, %p5, %p6;
	@%p7 bra 	BB29_4;

	lg2.approx.f32 	%f84, %f3;
	bra.uni 	BB29_10;

BB29_4:
	setp.lt.f32	%p8, %f3, 0f00800000;
	mul.f32 	%f18, %f3, 0f4B800000;
	selp.f32	%f19, %f18, %f3, %p8;
	selp.f32	%f20, 0fC3170000, 0fC2FE0000, %p8;
	mov.b32 	 %r2, %f19;
	and.b32  	%r3, %r2, 8388607;
	or.b32  	%r4, %r3, 1065353216;
	mov.b32 	 %f21, %r4;
	shr.u32 	%r5, %r2, 23;
	cvt.rn.f32.u32	%f22, %r5;
	add.f32 	%f23, %f20, %f22;
	setp.gt.f32	%p9, %f21, 0f3FAE147B;
	mul.f32 	%f24, %f21, 0f3F000000;
	add.f32 	%f25, %f23, 0f3F800000;
	selp.f32	%f26, %f24, %f21, %p9;
	selp.f32	%f27, %f25, %f23, %p9;
	add.f32 	%f17, %f26, 0f3F800000;
	add.f32 	%f28, %f26, 0fBF800000;
	// inline asm
	rcp.approx.ftz.f32 %f16,%f17;
	// inline asm
	neg.f32 	%f29, %f28;
	mul.f32 	%f30, %f28, %f29;
	mul.rn.f32 	%f31, %f16, %f30;
	add.rn.f32 	%f32, %f28, %f31;
	mul.f32 	%f33, %f32, %f32;
	mov.f32 	%f34, 0f3C4C6A36;
	mov.f32 	%f35, 0f3B1E94E6;
	fma.rn.f32 	%f36, %f35, %f33, %f34;
	mov.f32 	%f37, 0f3DAAAB1A;
	fma.rn.f32 	%f38, %f36, %f33, %f37;
	mul.f32 	%f39, %f38, %f33;
	fma.rn.f32 	%f40, %f39, %f32, %f31;
	add.f32 	%f41, %f40, %f28;
	mov.f32 	%f42, 0f3F317218;
	fma.rn.f32 	%f84, %f27, %f42, %f41;
	bra.uni 	BB29_10;

BB29_5:
	add.f32 	%f43, %f2, 0f40000000;
	div.approx.f32 	%f44, %f2, %f43;
	neg.f32 	%f45, %f2;
	mul.rn.f32 	%f46, %f45, %f44;
	add.rn.f32 	%f47, %f2, %f46;
	mul.f32 	%f48, %f47, %f47;
	mov.f32 	%f49, 0f3C4C4BE0;
	mov.f32 	%f50, 0f3B2063C3;
	fma.rn.f32 	%f51, %f50, %f48, %f49;
	mov.f32 	%f52, 0f3DAAAB50;
	fma.rn.f32 	%f53, %f51, %f48, %f52;
	mul.f32 	%f54, %f53, %f48;
	fma.rn.f32 	%f55, %f54, %f47, %f46;
	add.f32 	%f84, %f55, %f2;
	bra.uni 	BB29_10;

BB29_6:
	setp.gt.f32	%p10, %f1, 0f00000000;
	setp.lt.f32	%p11, %f1, 0f7F800000;
	and.pred  	%p12, %p10, %p11;
	@%p12 bra 	BB29_8;

	lg2.approx.f32 	%f83, %f1;
	bra.uni 	BB29_9;

BB29_8:
	setp.lt.f32	%p13, %f1, 0f00800000;
	mul.f32 	%f58, %f1, 0f4B800000;
	selp.f32	%f59, %f58, %f1, %p13;
	selp.f32	%f60, 0fC3170000, 0fC2FE0000, %p13;
	mov.b32 	 %r6, %f59;
	and.b32  	%r7, %r6, 8388607;
	or.b32  	%r8, %r7, 1065353216;
	mov.b32 	 %f61, %r8;
	shr.u32 	%r9, %r6, 23;
	cvt.rn.f32.u32	%f62, %r9;
	add.f32 	%f63, %f60, %f62;
	setp.gt.f32	%p14, %f61, 0f3FAE147B;
	mul.f32 	%f64, %f61, 0f3F000000;
	add.f32 	%f65, %f63, 0f3F800000;
	selp.f32	%f66, %f64, %f61, %p14;
	selp.f32	%f67, %f65, %f63, %p14;
	add.f32 	%f57, %f66, 0f3F800000;
	add.f32 	%f68, %f66, 0fBF800000;
	// inline asm
	rcp.approx.ftz.f32 %f56,%f57;
	// inline asm
	neg.f32 	%f69, %f68;
	mul.f32 	%f70, %f68, %f69;
	mul.rn.f32 	%f71, %f56, %f70;
	add.rn.f32 	%f72, %f68, %f71;
	mul.f32 	%f73, %f72, %f72;
	mov.f32 	%f74, 0f3C4C6A36;
	mov.f32 	%f75, 0f3B1E94E6;
	fma.rn.f32 	%f76, %f75, %f73, %f74;
	mov.f32 	%f77, 0f3DAAAB1A;
	fma.rn.f32 	%f78, %f76, %f73, %f77;
	mul.f32 	%f79, %f78, %f73;
	fma.rn.f32 	%f80, %f79, %f72, %f71;
	add.f32 	%f81, %f80, %f68;
	mov.f32 	%f82, 0f3F317218;
	fma.rn.f32 	%f83, %f67, %f82, %f81;

BB29_9:
	add.f32 	%f84, %f83, 0f3F317218;

BB29_10:
	st.param.f32	[funj_retval0+0], %f84;
	ret;
}

.visible .func  (.param .b32 funj_retval0) ___acoshi(
	.param .b32 ___acoshi_param_0
)
{
	.reg .pred 	%p<15>;
	.reg .s32 	%r<12>;
	.reg .f32 	%f<85>;


	ld.param.u32 	%r1, [___acoshi_param_0];
	cvt.rn.f32.s32	%f1, %r1;
	add.f32 	%f2, %f1, 0fBF800000;
	mov.b32 	 %r2, %f2;
	setp.gt.u32	%p1, %r2, 1258291200;
	@%p1 bra 	BB30_6;

	mul.rz.f32 	%f13, %f1, %f2;
	add.rn.f32 	%f14, %f13, %f2;
	sqrt.rn.f32 	%f15, %f14;
	add.f32 	%f3, %f2, %f15;
	setp.le.f32	%p2, %f3, 0f3F266666;
	setp.ge.f32	%p3, %f3, 0fBEC9BA5E;
	and.pred  	%p4, %p3, %p2;
	@%p4 bra 	BB30_5;

	add.f32 	%f4, %f3, 0f3F800000;
	setp.gt.f32	%p5, %f4, 0f00000000;
	setp.lt.f32	%p6, %f4, 0f7F800000;
	and.pred  	%p7, %p5, %p6;
	@%p7 bra 	BB30_4;

	lg2.approx.f32 	%f84, %f4;
	bra.uni 	BB30_10;

BB30_4:
	setp.lt.f32	%p8, %f4, 0f00800000;
	mul.f32 	%f18, %f4, 0f4B800000;
	selp.f32	%f19, %f18, %f4, %p8;
	selp.f32	%f20, 0fC3170000, 0fC2FE0000, %p8;
	mov.b32 	 %r3, %f19;
	and.b32  	%r4, %r3, 8388607;
	or.b32  	%r5, %r4, 1065353216;
	mov.b32 	 %f21, %r5;
	shr.u32 	%r6, %r3, 23;
	cvt.rn.f32.u32	%f22, %r6;
	add.f32 	%f23, %f20, %f22;
	setp.gt.f32	%p9, %f21, 0f3FAE147B;
	mul.f32 	%f24, %f21, 0f3F000000;
	add.f32 	%f25, %f23, 0f3F800000;
	selp.f32	%f26, %f24, %f21, %p9;
	selp.f32	%f27, %f25, %f23, %p9;
	add.f32 	%f17, %f26, 0f3F800000;
	add.f32 	%f28, %f26, 0fBF800000;
	// inline asm
	rcp.approx.ftz.f32 %f16,%f17;
	// inline asm
	neg.f32 	%f29, %f28;
	mul.f32 	%f30, %f28, %f29;
	mul.rn.f32 	%f31, %f16, %f30;
	add.rn.f32 	%f32, %f28, %f31;
	mul.f32 	%f33, %f32, %f32;
	mov.f32 	%f34, 0f3C4C6A36;
	mov.f32 	%f35, 0f3B1E94E6;
	fma.rn.f32 	%f36, %f35, %f33, %f34;
	mov.f32 	%f37, 0f3DAAAB1A;
	fma.rn.f32 	%f38, %f36, %f33, %f37;
	mul.f32 	%f39, %f38, %f33;
	fma.rn.f32 	%f40, %f39, %f32, %f31;
	add.f32 	%f41, %f40, %f28;
	mov.f32 	%f42, 0f3F317218;
	fma.rn.f32 	%f84, %f27, %f42, %f41;
	bra.uni 	BB30_10;

BB30_5:
	add.f32 	%f43, %f3, 0f40000000;
	div.approx.f32 	%f44, %f3, %f43;
	neg.f32 	%f45, %f3;
	mul.rn.f32 	%f46, %f45, %f44;
	add.rn.f32 	%f47, %f3, %f46;
	mul.f32 	%f48, %f47, %f47;
	mov.f32 	%f49, 0f3C4C4BE0;
	mov.f32 	%f50, 0f3B2063C3;
	fma.rn.f32 	%f51, %f50, %f48, %f49;
	mov.f32 	%f52, 0f3DAAAB50;
	fma.rn.f32 	%f53, %f51, %f48, %f52;
	mul.f32 	%f54, %f53, %f48;
	fma.rn.f32 	%f55, %f54, %f47, %f46;
	add.f32 	%f84, %f55, %f3;
	bra.uni 	BB30_10;

BB30_6:
	setp.gt.f32	%p10, %f2, 0f00000000;
	setp.lt.f32	%p11, %f2, 0f7F800000;
	and.pred  	%p12, %p10, %p11;
	@%p12 bra 	BB30_8;

	lg2.approx.f32 	%f83, %f2;
	bra.uni 	BB30_9;

BB30_8:
	setp.lt.f32	%p13, %f2, 0f00800000;
	mul.f32 	%f58, %f2, 0f4B800000;
	selp.f32	%f59, %f58, %f2, %p13;
	selp.f32	%f60, 0fC3170000, 0fC2FE0000, %p13;
	mov.b32 	 %r7, %f59;
	and.b32  	%r8, %r7, 8388607;
	or.b32  	%r9, %r8, 1065353216;
	mov.b32 	 %f61, %r9;
	shr.u32 	%r10, %r7, 23;
	cvt.rn.f32.u32	%f62, %r10;
	add.f32 	%f63, %f60, %f62;
	setp.gt.f32	%p14, %f61, 0f3FAE147B;
	mul.f32 	%f64, %f61, 0f3F000000;
	add.f32 	%f65, %f63, 0f3F800000;
	selp.f32	%f66, %f64, %f61, %p14;
	selp.f32	%f67, %f65, %f63, %p14;
	add.f32 	%f57, %f66, 0f3F800000;
	add.f32 	%f68, %f66, 0fBF800000;
	// inline asm
	rcp.approx.ftz.f32 %f56,%f57;
	// inline asm
	neg.f32 	%f69, %f68;
	mul.f32 	%f70, %f68, %f69;
	mul.rn.f32 	%f71, %f56, %f70;
	add.rn.f32 	%f72, %f68, %f71;
	mul.f32 	%f73, %f72, %f72;
	mov.f32 	%f74, 0f3C4C6A36;
	mov.f32 	%f75, 0f3B1E94E6;
	fma.rn.f32 	%f76, %f75, %f73, %f74;
	mov.f32 	%f77, 0f3DAAAB1A;
	fma.rn.f32 	%f78, %f76, %f73, %f77;
	mul.f32 	%f79, %f78, %f73;
	fma.rn.f32 	%f80, %f79, %f72, %f71;
	add.f32 	%f81, %f80, %f68;
	mov.f32 	%f82, 0f3F317218;
	fma.rn.f32 	%f83, %f67, %f82, %f81;

BB30_9:
	add.f32 	%f84, %f83, 0f3F317218;

BB30_10:
	cvt.rzi.s32.f32	%r11, %f84;
	st.param.b32	[funj_retval0+0], %r11;
	ret;
}

.visible .func  (.param .b32 funj_retval0) ___acoshu(
	.param .b32 ___acoshu_param_0
)
{
	.reg .pred 	%p<15>;
	.reg .s32 	%r<12>;
	.reg .f32 	%f<85>;


	ld.param.u32 	%r1, [___acoshu_param_0];
	cvt.rn.f32.u32	%f1, %r1;
	add.f32 	%f2, %f1, 0fBF800000;
	mov.b32 	 %r2, %f2;
	setp.gt.u32	%p1, %r2, 1258291200;
	@%p1 bra 	BB31_6;

	mul.rz.f32 	%f13, %f1, %f2;
	add.rn.f32 	%f14, %f13, %f2;
	sqrt.rn.f32 	%f15, %f14;
	add.f32 	%f3, %f2, %f15;
	setp.le.f32	%p2, %f3, 0f3F266666;
	setp.ge.f32	%p3, %f3, 0fBEC9BA5E;
	and.pred  	%p4, %p3, %p2;
	@%p4 bra 	BB31_5;

	add.f32 	%f4, %f3, 0f3F800000;
	setp.gt.f32	%p5, %f4, 0f00000000;
	setp.lt.f32	%p6, %f4, 0f7F800000;
	and.pred  	%p7, %p5, %p6;
	@%p7 bra 	BB31_4;

	lg2.approx.f32 	%f84, %f4;
	bra.uni 	BB31_10;

BB31_4:
	setp.lt.f32	%p8, %f4, 0f00800000;
	mul.f32 	%f18, %f4, 0f4B800000;
	selp.f32	%f19, %f18, %f4, %p8;
	selp.f32	%f20, 0fC3170000, 0fC2FE0000, %p8;
	mov.b32 	 %r3, %f19;
	and.b32  	%r4, %r3, 8388607;
	or.b32  	%r5, %r4, 1065353216;
	mov.b32 	 %f21, %r5;
	shr.u32 	%r6, %r3, 23;
	cvt.rn.f32.u32	%f22, %r6;
	add.f32 	%f23, %f20, %f22;
	setp.gt.f32	%p9, %f21, 0f3FAE147B;
	mul.f32 	%f24, %f21, 0f3F000000;
	add.f32 	%f25, %f23, 0f3F800000;
	selp.f32	%f26, %f24, %f21, %p9;
	selp.f32	%f27, %f25, %f23, %p9;
	add.f32 	%f17, %f26, 0f3F800000;
	add.f32 	%f28, %f26, 0fBF800000;
	// inline asm
	rcp.approx.ftz.f32 %f16,%f17;
	// inline asm
	neg.f32 	%f29, %f28;
	mul.f32 	%f30, %f28, %f29;
	mul.rn.f32 	%f31, %f16, %f30;
	add.rn.f32 	%f32, %f28, %f31;
	mul.f32 	%f33, %f32, %f32;
	mov.f32 	%f34, 0f3C4C6A36;
	mov.f32 	%f35, 0f3B1E94E6;
	fma.rn.f32 	%f36, %f35, %f33, %f34;
	mov.f32 	%f37, 0f3DAAAB1A;
	fma.rn.f32 	%f38, %f36, %f33, %f37;
	mul.f32 	%f39, %f38, %f33;
	fma.rn.f32 	%f40, %f39, %f32, %f31;
	add.f32 	%f41, %f40, %f28;
	mov.f32 	%f42, 0f3F317218;
	fma.rn.f32 	%f84, %f27, %f42, %f41;
	bra.uni 	BB31_10;

BB31_5:
	add.f32 	%f43, %f3, 0f40000000;
	div.approx.f32 	%f44, %f3, %f43;
	neg.f32 	%f45, %f3;
	mul.rn.f32 	%f46, %f45, %f44;
	add.rn.f32 	%f47, %f3, %f46;
	mul.f32 	%f48, %f47, %f47;
	mov.f32 	%f49, 0f3C4C4BE0;
	mov.f32 	%f50, 0f3B2063C3;
	fma.rn.f32 	%f51, %f50, %f48, %f49;
	mov.f32 	%f52, 0f3DAAAB50;
	fma.rn.f32 	%f53, %f51, %f48, %f52;
	mul.f32 	%f54, %f53, %f48;
	fma.rn.f32 	%f55, %f54, %f47, %f46;
	add.f32 	%f84, %f55, %f3;
	bra.uni 	BB31_10;

BB31_6:
	setp.gt.f32	%p10, %f2, 0f00000000;
	setp.lt.f32	%p11, %f2, 0f7F800000;
	and.pred  	%p12, %p10, %p11;
	@%p12 bra 	BB31_8;

	lg2.approx.f32 	%f83, %f2;
	bra.uni 	BB31_9;

BB31_8:
	setp.lt.f32	%p13, %f2, 0f00800000;
	mul.f32 	%f58, %f2, 0f4B800000;
	selp.f32	%f59, %f58, %f2, %p13;
	selp.f32	%f60, 0fC3170000, 0fC2FE0000, %p13;
	mov.b32 	 %r7, %f59;
	and.b32  	%r8, %r7, 8388607;
	or.b32  	%r9, %r8, 1065353216;
	mov.b32 	 %f61, %r9;
	shr.u32 	%r10, %r7, 23;
	cvt.rn.f32.u32	%f62, %r10;
	add.f32 	%f63, %f60, %f62;
	setp.gt.f32	%p14, %f61, 0f3FAE147B;
	mul.f32 	%f64, %f61, 0f3F000000;
	add.f32 	%f65, %f63, 0f3F800000;
	selp.f32	%f66, %f64, %f61, %p14;
	selp.f32	%f67, %f65, %f63, %p14;
	add.f32 	%f57, %f66, 0f3F800000;
	add.f32 	%f68, %f66, 0fBF800000;
	// inline asm
	rcp.approx.ftz.f32 %f56,%f57;
	// inline asm
	neg.f32 	%f69, %f68;
	mul.f32 	%f70, %f68, %f69;
	mul.rn.f32 	%f71, %f56, %f70;
	add.rn.f32 	%f72, %f68, %f71;
	mul.f32 	%f73, %f72, %f72;
	mov.f32 	%f74, 0f3C4C6A36;
	mov.f32 	%f75, 0f3B1E94E6;
	fma.rn.f32 	%f76, %f75, %f73, %f74;
	mov.f32 	%f77, 0f3DAAAB1A;
	fma.rn.f32 	%f78, %f76, %f73, %f77;
	mul.f32 	%f79, %f78, %f73;
	fma.rn.f32 	%f80, %f79, %f72, %f71;
	add.f32 	%f81, %f80, %f68;
	mov.f32 	%f82, 0f3F317218;
	fma.rn.f32 	%f83, %f67, %f82, %f81;

BB31_9:
	add.f32 	%f84, %f83, 0f3F317218;

BB31_10:
	cvt.rzi.u32.f32	%r11, %f84;
	st.param.b32	[funj_retval0+0], %r11;
	ret;
}

.visible .func  (.param .b32 funj_retval0) ___acoshj(
	.param .b32 ___acoshj_param_0
)
{
	.reg .pred 	%p<15>;
	.reg .s16 	%rs<2>;
	.reg .s32 	%r<12>;
	.reg .f32 	%f<85>;


	ld.param.s8 	%rs1, [___acoshj_param_0];
	cvt.rn.f32.s16	%f1, %rs1;
	add.f32 	%f2, %f1, 0fBF800000;
	mov.b32 	 %r1, %f2;
	setp.gt.u32	%p1, %r1, 1258291200;
	@%p1 bra 	BB32_6;

	mul.rz.f32 	%f13, %f1, %f2;
	add.rn.f32 	%f14, %f13, %f2;
	sqrt.rn.f32 	%f15, %f14;
	add.f32 	%f3, %f2, %f15;
	setp.le.f32	%p2, %f3, 0f3F266666;
	setp.ge.f32	%p3, %f3, 0fBEC9BA5E;
	and.pred  	%p4, %p3, %p2;
	@%p4 bra 	BB32_5;

	add.f32 	%f4, %f3, 0f3F800000;
	setp.gt.f32	%p5, %f4, 0f00000000;
	setp.lt.f32	%p6, %f4, 0f7F800000;
	and.pred  	%p7, %p5, %p6;
	@%p7 bra 	BB32_4;

	lg2.approx.f32 	%f84, %f4;
	bra.uni 	BB32_10;

BB32_4:
	setp.lt.f32	%p8, %f4, 0f00800000;
	mul.f32 	%f18, %f4, 0f4B800000;
	selp.f32	%f19, %f18, %f4, %p8;
	selp.f32	%f20, 0fC3170000, 0fC2FE0000, %p8;
	mov.b32 	 %r2, %f19;
	and.b32  	%r3, %r2, 8388607;
	or.b32  	%r4, %r3, 1065353216;
	mov.b32 	 %f21, %r4;
	shr.u32 	%r5, %r2, 23;
	cvt.rn.f32.u32	%f22, %r5;
	add.f32 	%f23, %f20, %f22;
	setp.gt.f32	%p9, %f21, 0f3FAE147B;
	mul.f32 	%f24, %f21, 0f3F000000;
	add.f32 	%f25, %f23, 0f3F800000;
	selp.f32	%f26, %f24, %f21, %p9;
	selp.f32	%f27, %f25, %f23, %p9;
	add.f32 	%f17, %f26, 0f3F800000;
	add.f32 	%f28, %f26, 0fBF800000;
	// inline asm
	rcp.approx.ftz.f32 %f16,%f17;
	// inline asm
	neg.f32 	%f29, %f28;
	mul.f32 	%f30, %f28, %f29;
	mul.rn.f32 	%f31, %f16, %f30;
	add.rn.f32 	%f32, %f28, %f31;
	mul.f32 	%f33, %f32, %f32;
	mov.f32 	%f34, 0f3C4C6A36;
	mov.f32 	%f35, 0f3B1E94E6;
	fma.rn.f32 	%f36, %f35, %f33, %f34;
	mov.f32 	%f37, 0f3DAAAB1A;
	fma.rn.f32 	%f38, %f36, %f33, %f37;
	mul.f32 	%f39, %f38, %f33;
	fma.rn.f32 	%f40, %f39, %f32, %f31;
	add.f32 	%f41, %f40, %f28;
	mov.f32 	%f42, 0f3F317218;
	fma.rn.f32 	%f84, %f27, %f42, %f41;
	bra.uni 	BB32_10;

BB32_5:
	add.f32 	%f43, %f3, 0f40000000;
	div.approx.f32 	%f44, %f3, %f43;
	neg.f32 	%f45, %f3;
	mul.rn.f32 	%f46, %f45, %f44;
	add.rn.f32 	%f47, %f3, %f46;
	mul.f32 	%f48, %f47, %f47;
	mov.f32 	%f49, 0f3C4C4BE0;
	mov.f32 	%f50, 0f3B2063C3;
	fma.rn.f32 	%f51, %f50, %f48, %f49;
	mov.f32 	%f52, 0f3DAAAB50;
	fma.rn.f32 	%f53, %f51, %f48, %f52;
	mul.f32 	%f54, %f53, %f48;
	fma.rn.f32 	%f55, %f54, %f47, %f46;
	add.f32 	%f84, %f55, %f3;
	bra.uni 	BB32_10;

BB32_6:
	setp.gt.f32	%p10, %f2, 0f00000000;
	setp.lt.f32	%p11, %f2, 0f7F800000;
	and.pred  	%p12, %p10, %p11;
	@%p12 bra 	BB32_8;

	lg2.approx.f32 	%f83, %f2;
	bra.uni 	BB32_9;

BB32_8:
	setp.lt.f32	%p13, %f2, 0f00800000;
	mul.f32 	%f58, %f2, 0f4B800000;
	selp.f32	%f59, %f58, %f2, %p13;
	selp.f32	%f60, 0fC3170000, 0fC2FE0000, %p13;
	mov.b32 	 %r6, %f59;
	and.b32  	%r7, %r6, 8388607;
	or.b32  	%r8, %r7, 1065353216;
	mov.b32 	 %f61, %r8;
	shr.u32 	%r9, %r6, 23;
	cvt.rn.f32.u32	%f62, %r9;
	add.f32 	%f63, %f60, %f62;
	setp.gt.f32	%p14, %f61, 0f3FAE147B;
	mul.f32 	%f64, %f61, 0f3F000000;
	add.f32 	%f65, %f63, 0f3F800000;
	selp.f32	%f66, %f64, %f61, %p14;
	selp.f32	%f67, %f65, %f63, %p14;
	add.f32 	%f57, %f66, 0f3F800000;
	add.f32 	%f68, %f66, 0fBF800000;
	// inline asm
	rcp.approx.ftz.f32 %f56,%f57;
	// inline asm
	neg.f32 	%f69, %f68;
	mul.f32 	%f70, %f68, %f69;
	mul.rn.f32 	%f71, %f56, %f70;
	add.rn.f32 	%f72, %f68, %f71;
	mul.f32 	%f73, %f72, %f72;
	mov.f32 	%f74, 0f3C4C6A36;
	mov.f32 	%f75, 0f3B1E94E6;
	fma.rn.f32 	%f76, %f75, %f73, %f74;
	mov.f32 	%f77, 0f3DAAAB1A;
	fma.rn.f32 	%f78, %f76, %f73, %f77;
	mul.f32 	%f79, %f78, %f73;
	fma.rn.f32 	%f80, %f79, %f72, %f71;
	add.f32 	%f81, %f80, %f68;
	mov.f32 	%f82, 0f3F317218;
	fma.rn.f32 	%f83, %f67, %f82, %f81;

BB32_9:
	add.f32 	%f84, %f83, 0f3F317218;

BB32_10:
	cvt.rzi.s32.f32	%r10, %f84;
	cvt.s32.s8 	%r11, %r10;
	st.param.b32	[funj_retval0+0], %r11;
	ret;
}

.visible .func  (.param .b32 funj_retval0) ___acosvv(
	.param .b32 ___acosvv_param_0
)
{
	.reg .pred 	%p<15>;
	.reg .s16 	%rs<2>;
	.reg .s32 	%r<12>;
	.reg .f32 	%f<85>;


	ld.param.u8 	%rs1, [___acosvv_param_0];
	cvt.rn.f32.u16	%f1, %rs1;
	add.f32 	%f2, %f1, 0fBF800000;
	mov.b32 	 %r1, %f2;
	setp.gt.u32	%p1, %r1, 1258291200;
	@%p1 bra 	BB33_6;

	mul.rz.f32 	%f13, %f1, %f2;
	add.rn.f32 	%f14, %f13, %f2;
	sqrt.rn.f32 	%f15, %f14;
	add.f32 	%f3, %f2, %f15;
	setp.le.f32	%p2, %f3, 0f3F266666;
	setp.ge.f32	%p3, %f3, 0fBEC9BA5E;
	and.pred  	%p4, %p3, %p2;
	@%p4 bra 	BB33_5;

	add.f32 	%f4, %f3, 0f3F800000;
	setp.gt.f32	%p5, %f4, 0f00000000;
	setp.lt.f32	%p6, %f4, 0f7F800000;
	and.pred  	%p7, %p5, %p6;
	@%p7 bra 	BB33_4;

	lg2.approx.f32 	%f84, %f4;
	bra.uni 	BB33_10;

BB33_4:
	setp.lt.f32	%p8, %f4, 0f00800000;
	mul.f32 	%f18, %f4, 0f4B800000;
	selp.f32	%f19, %f18, %f4, %p8;
	selp.f32	%f20, 0fC3170000, 0fC2FE0000, %p8;
	mov.b32 	 %r2, %f19;
	and.b32  	%r3, %r2, 8388607;
	or.b32  	%r4, %r3, 1065353216;
	mov.b32 	 %f21, %r4;
	shr.u32 	%r5, %r2, 23;
	cvt.rn.f32.u32	%f22, %r5;
	add.f32 	%f23, %f20, %f22;
	setp.gt.f32	%p9, %f21, 0f3FAE147B;
	mul.f32 	%f24, %f21, 0f3F000000;
	add.f32 	%f25, %f23, 0f3F800000;
	selp.f32	%f26, %f24, %f21, %p9;
	selp.f32	%f27, %f25, %f23, %p9;
	add.f32 	%f17, %f26, 0f3F800000;
	add.f32 	%f28, %f26, 0fBF800000;
	// inline asm
	rcp.approx.ftz.f32 %f16,%f17;
	// inline asm
	neg.f32 	%f29, %f28;
	mul.f32 	%f30, %f28, %f29;
	mul.rn.f32 	%f31, %f16, %f30;
	add.rn.f32 	%f32, %f28, %f31;
	mul.f32 	%f33, %f32, %f32;
	mov.f32 	%f34, 0f3C4C6A36;
	mov.f32 	%f35, 0f3B1E94E6;
	fma.rn.f32 	%f36, %f35, %f33, %f34;
	mov.f32 	%f37, 0f3DAAAB1A;
	fma.rn.f32 	%f38, %f36, %f33, %f37;
	mul.f32 	%f39, %f38, %f33;
	fma.rn.f32 	%f40, %f39, %f32, %f31;
	add.f32 	%f41, %f40, %f28;
	mov.f32 	%f42, 0f3F317218;
	fma.rn.f32 	%f84, %f27, %f42, %f41;
	bra.uni 	BB33_10;

BB33_5:
	add.f32 	%f43, %f3, 0f40000000;
	div.approx.f32 	%f44, %f3, %f43;
	neg.f32 	%f45, %f3;
	mul.rn.f32 	%f46, %f45, %f44;
	add.rn.f32 	%f47, %f3, %f46;
	mul.f32 	%f48, %f47, %f47;
	mov.f32 	%f49, 0f3C4C4BE0;
	mov.f32 	%f50, 0f3B2063C3;
	fma.rn.f32 	%f51, %f50, %f48, %f49;
	mov.f32 	%f52, 0f3DAAAB50;
	fma.rn.f32 	%f53, %f51, %f48, %f52;
	mul.f32 	%f54, %f53, %f48;
	fma.rn.f32 	%f55, %f54, %f47, %f46;
	add.f32 	%f84, %f55, %f3;
	bra.uni 	BB33_10;

BB33_6:
	setp.gt.f32	%p10, %f2, 0f00000000;
	setp.lt.f32	%p11, %f2, 0f7F800000;
	and.pred  	%p12, %p10, %p11;
	@%p12 bra 	BB33_8;

	lg2.approx.f32 	%f83, %f2;
	bra.uni 	BB33_9;

BB33_8:
	setp.lt.f32	%p13, %f2, 0f00800000;
	mul.f32 	%f58, %f2, 0f4B800000;
	selp.f32	%f59, %f58, %f2, %p13;
	selp.f32	%f60, 0fC3170000, 0fC2FE0000, %p13;
	mov.b32 	 %r6, %f59;
	and.b32  	%r7, %r6, 8388607;
	or.b32  	%r8, %r7, 1065353216;
	mov.b32 	 %f61, %r8;
	shr.u32 	%r9, %r6, 23;
	cvt.rn.f32.u32	%f62, %r9;
	add.f32 	%f63, %f60, %f62;
	setp.gt.f32	%p14, %f61, 0f3FAE147B;
	mul.f32 	%f64, %f61, 0f3F000000;
	add.f32 	%f65, %f63, 0f3F800000;
	selp.f32	%f66, %f64, %f61, %p14;
	selp.f32	%f67, %f65, %f63, %p14;
	add.f32 	%f57, %f66, 0f3F800000;
	add.f32 	%f68, %f66, 0fBF800000;
	// inline asm
	rcp.approx.ftz.f32 %f56,%f57;
	// inline asm
	neg.f32 	%f69, %f68;
	mul.f32 	%f70, %f68, %f69;
	mul.rn.f32 	%f71, %f56, %f70;
	add.rn.f32 	%f72, %f68, %f71;
	mul.f32 	%f73, %f72, %f72;
	mov.f32 	%f74, 0f3C4C6A36;
	mov.f32 	%f75, 0f3B1E94E6;
	fma.rn.f32 	%f76, %f75, %f73, %f74;
	mov.f32 	%f77, 0f3DAAAB1A;
	fma.rn.f32 	%f78, %f76, %f73, %f77;
	mul.f32 	%f79, %f78, %f73;
	fma.rn.f32 	%f80, %f79, %f72, %f71;
	add.f32 	%f81, %f80, %f68;
	mov.f32 	%f82, 0f3F317218;
	fma.rn.f32 	%f83, %f67, %f82, %f81;

BB33_9:
	add.f32 	%f84, %f83, 0f3F317218;

BB33_10:
	cvt.rzi.u32.f32	%r10, %f84;
	and.b32  	%r11, %r10, 255;
	st.param.b32	[funj_retval0+0], %r11;
	ret;
}

.visible .func  (.param .b64 funj_retval0) ___acoshd(
	.param .b64 ___acoshd_param_0
)
{
	.reg .pred 	%p<22>;
	.reg .s32 	%r<55>;
	.reg .f64 	%fd<158>;


	ld.param.f64 	%fd22, [___acoshd_param_0];
	add.f64 	%fd1, %fd22, 0dBFF0000000000000;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r51}, %fd1;
	}
	setp.gt.u32	%p1, %r51, 1127219199;
	@%p1 bra 	BB34_16;

	fma.rn.f64 	%fd24, %fd22, %fd1, %fd1;
	// inline asm
	rsqrt.approx.ftz.f64 %fd23, %fd24;
	// inline asm
	{
	.reg .b32 %temp; 
	mov.b64 	{%r21, %temp}, %fd23;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r22}, %fd23;
	}
	add.s32 	%r23, %r22, -1048576;
	mov.b64 	%fd25, {%r21, %r23};
	mul.f64 	%fd26, %fd24, %fd23;
	neg.f64 	%fd27, %fd26;
	fma.rn.f64 	%fd28, %fd26, %fd27, %fd24;
	fma.rn.f64 	%fd29, %fd28, %fd25, %fd26;
	neg.f64 	%fd30, %fd29;
	mov.f64 	%fd31, 0d3FF0000000000000;
	fma.rn.f64 	%fd32, %fd23, %fd30, %fd31;
	fma.rn.f64 	%fd33, %fd32, %fd25, %fd25;
	fma.rn.f64 	%fd34, %fd29, %fd30, %fd24;
	fma.rn.f64 	%fd35, %fd34, %fd33, %fd29;
	add.f64 	%fd2, %fd1, %fd35;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r24}, %fd2;
	}
	setp.lt.u32	%p2, %r24, 1071994197;
	setp.lt.s32	%p3, %r24, -1076258407;
	or.pred  	%p4, %p2, %p3;
	@%p4 bra 	BB34_14;

	add.f64 	%fd3, %fd2, 0d3FF0000000000000;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r47}, %fd3;
	}
	setp.gt.f64	%p5, %fd3, 0d0000000000000000;
	setp.lt.s32	%p6, %r47, 2146435072;
	and.pred  	%p7, %p5, %p6;
	@%p7 bra 	BB34_8;

	abs.f64 	%fd36, %fd3;
	setp.gtu.f64	%p8, %fd36, 0d7FF0000000000000;
	@%p8 bra 	BB34_7;

	setp.neu.f64	%p9, %fd3, 0d0000000000000000;
	@%p9 bra 	BB34_6;

	mov.f64 	%fd154, 0dFFF0000000000000;
	bra.uni 	BB34_15;

BB34_6:
	setp.eq.f64	%p10, %fd3, 0d7FF0000000000000;
	selp.f64	%fd154, %fd3, 0dFFF8000000000000, %p10;
	bra.uni 	BB34_15;

BB34_7:
	add.f64 	%fd154, %fd3, %fd3;
	bra.uni 	BB34_15;

BB34_8:
	{
	.reg .b32 %temp; 
	mov.b64 	{%r48, %temp}, %fd3;
	}
	setp.lt.s32	%p11, %r47, 1048576;
	@%p11 bra 	BB34_10;

	mov.u32 	%r49, -1023;
	bra.uni 	BB34_11;

BB34_10:
	mul.f64 	%fd38, %fd3, 0d4350000000000000;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r47}, %fd38;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%r48, %temp}, %fd38;
	}
	mov.u32 	%r49, -1077;

BB34_11:
	shr.u32 	%r27, %r47, 20;
	add.s32 	%r50, %r49, %r27;
	and.b32  	%r28, %r47, -2146435073;
	or.b32  	%r29, %r28, 1072693248;
	mov.b64 	%fd153, {%r48, %r29};
	setp.lt.s32	%p12, %r29, 1073127583;
	@%p12 bra 	BB34_13;

	{
	.reg .b32 %temp; 
	mov.b64 	{%r30, %temp}, %fd153;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r31}, %fd153;
	}
	add.s32 	%r32, %r31, -1048576;
	mov.b64 	%fd153, {%r30, %r32};
	add.s32 	%r50, %r50, 1;

BB34_13:
	add.f64 	%fd40, %fd153, 0d3FF0000000000000;
	// inline asm
	rcp.approx.ftz.f64 %fd39,%fd40;
	// inline asm
	neg.f64 	%fd42, %fd40;
	fma.rn.f64 	%fd43, %fd42, %fd39, %fd31;
	fma.rn.f64 	%fd44, %fd43, %fd43, %fd43;
	fma.rn.f64 	%fd45, %fd44, %fd39, %fd39;
	add.f64 	%fd46, %fd153, 0dBFF0000000000000;
	mul.f64 	%fd47, %fd46, %fd45;
	fma.rn.f64 	%fd48, %fd46, %fd45, %fd47;
	mul.f64 	%fd49, %fd48, %fd48;
	mov.f64 	%fd50, 0d3ED0EE258B7A8B04;
	mov.f64 	%fd51, 0d3EB1380B3AE80F1E;
	fma.rn.f64 	%fd52, %fd51, %fd49, %fd50;
	mov.f64 	%fd53, 0d3EF3B2669F02676F;
	fma.rn.f64 	%fd54, %fd52, %fd49, %fd53;
	mov.f64 	%fd55, 0d3F1745CBA9AB0956;
	fma.rn.f64 	%fd56, %fd54, %fd49, %fd55;
	mov.f64 	%fd57, 0d3F3C71C72D1B5154;
	fma.rn.f64 	%fd58, %fd56, %fd49, %fd57;
	mov.f64 	%fd59, 0d3F624924923BE72D;
	fma.rn.f64 	%fd60, %fd58, %fd49, %fd59;
	mov.f64 	%fd61, 0d3F8999999999A3C4;
	fma.rn.f64 	%fd62, %fd60, %fd49, %fd61;
	mov.f64 	%fd63, 0d3FB5555555555554;
	fma.rn.f64 	%fd64, %fd62, %fd49, %fd63;
	sub.f64 	%fd65, %fd46, %fd48;
	add.f64 	%fd66, %fd65, %fd65;
	neg.f64 	%fd67, %fd48;
	fma.rn.f64 	%fd68, %fd67, %fd46, %fd66;
	mul.f64 	%fd69, %fd45, %fd68;
	mul.f64 	%fd70, %fd64, %fd49;
	fma.rn.f64 	%fd71, %fd70, %fd48, %fd69;
	xor.b32  	%r33, %r50, -2147483648;
	mov.u32 	%r34, -2147483648;
	mov.u32 	%r35, 1127219200;
	mov.b64 	%fd72, {%r33, %r35};
	mov.b64 	%fd73, {%r34, %r35};
	sub.f64 	%fd74, %fd72, %fd73;
	mov.f64 	%fd75, 0d3FE62E42FEFA39EF;
	fma.rn.f64 	%fd76, %fd74, %fd75, %fd48;
	neg.f64 	%fd77, %fd74;
	fma.rn.f64 	%fd78, %fd77, %fd75, %fd76;
	sub.f64 	%fd79, %fd78, %fd48;
	sub.f64 	%fd80, %fd71, %fd79;
	mov.f64 	%fd81, 0d3C7ABC9E3B39803F;
	fma.rn.f64 	%fd82, %fd74, %fd81, %fd80;
	add.f64 	%fd154, %fd76, %fd82;
	bra.uni 	BB34_15;

BB34_14:
	add.f64 	%fd83, %fd2, 0d4000000000000000;
	div.rn.f64 	%fd84, %fd2, %fd83;
	neg.f64 	%fd85, %fd2;
	mul.f64 	%fd86, %fd84, %fd85;
	add.f64 	%fd87, %fd2, %fd86;
	mul.f64 	%fd88, %fd87, %fd87;
	mov.f64 	%fd89, 0d3ED087FFCEB2DC44;
	mov.f64 	%fd90, 0d3EB372FB2FBE14B5;
	fma.rn.f64 	%fd91, %fd90, %fd88, %fd89;
	mov.f64 	%fd92, 0d3EF3B9FF890F468C;
	fma.rn.f64 	%fd93, %fd91, %fd88, %fd92;
	mov.f64 	%fd94, 0d3F17457EFD51BAF8;
	fma.rn.f64 	%fd95, %fd93, %fd88, %fd94;
	mov.f64 	%fd96, 0d3F3C71C8DE3CE825;
	fma.rn.f64 	%fd97, %fd95, %fd88, %fd96;
	mov.f64 	%fd98, 0d3F6249248FA4661F;
	fma.rn.f64 	%fd99, %fd97, %fd88, %fd98;
	mov.f64 	%fd100, 0d3F899999999D70C4;
	fma.rn.f64 	%fd101, %fd99, %fd88, %fd100;
	mov.f64 	%fd102, 0d3FB5555555555462;
	fma.rn.f64 	%fd103, %fd101, %fd88, %fd102;
	mul.f64 	%fd104, %fd103, %fd88;
	fma.rn.f64 	%fd105, %fd104, %fd87, %fd86;
	add.f64 	%fd154, %fd105, %fd2;

BB34_15:
	setp.eq.s32	%p13, %r51, 0;
	selp.f64	%fd157, %fd1, %fd154, %p13;
	bra.uni 	BB34_29;

BB34_16:
	setp.lt.s32	%p14, %r51, 2146435072;
	setp.gt.f64	%p15, %fd1, 0d0000000000000000;
	and.pred  	%p16, %p15, %p14;
	@%p16 bra 	BB34_22;

	abs.f64 	%fd106, %fd1;
	setp.gtu.f64	%p17, %fd106, 0d7FF0000000000000;
	@%p17 bra 	BB34_21;

	setp.neu.f64	%p18, %fd1, 0d0000000000000000;
	@%p18 bra 	BB34_20;

	mov.f64 	%fd156, 0dFFF0000000000000;
	bra.uni 	BB34_28;

BB34_20:
	setp.eq.f64	%p19, %fd1, 0d7FF0000000000000;
	selp.f64	%fd156, %fd1, 0dFFF8000000000000, %p19;
	bra.uni 	BB34_28;

BB34_21:
	add.f64 	%fd156, %fd1, %fd1;
	bra.uni 	BB34_28;

BB34_22:
	{
	.reg .b32 %temp; 
	mov.b64 	{%r52, %temp}, %fd1;
	}
	setp.lt.s32	%p20, %r51, 1048576;
	@%p20 bra 	BB34_24;

	mov.u32 	%r53, -1023;
	bra.uni 	BB34_25;

BB34_24:
	mul.f64 	%fd108, %fd1, 0d4350000000000000;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r51}, %fd108;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%r52, %temp}, %fd108;
	}
	mov.u32 	%r53, -1077;

BB34_25:
	shr.u32 	%r38, %r51, 20;
	add.s32 	%r54, %r53, %r38;
	and.b32  	%r39, %r51, -2146435073;
	or.b32  	%r40, %r39, 1072693248;
	mov.b64 	%fd155, {%r52, %r40};
	setp.lt.s32	%p21, %r40, 1073127583;
	@%p21 bra 	BB34_27;

	{
	.reg .b32 %temp; 
	mov.b64 	{%r41, %temp}, %fd155;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r42}, %fd155;
	}
	add.s32 	%r43, %r42, -1048576;
	mov.b64 	%fd155, {%r41, %r43};
	add.s32 	%r54, %r54, 1;

BB34_27:
	add.f64 	%fd110, %fd155, 0d3FF0000000000000;
	mov.f64 	%fd111, 0d3FF0000000000000;
	// inline asm
	rcp.approx.ftz.f64 %fd109,%fd110;
	// inline asm
	neg.f64 	%fd112, %fd110;
	fma.rn.f64 	%fd113, %fd112, %fd109, %fd111;
	fma.rn.f64 	%fd114, %fd113, %fd113, %fd113;
	fma.rn.f64 	%fd115, %fd114, %fd109, %fd109;
	add.f64 	%fd116, %fd155, 0dBFF0000000000000;
	mul.f64 	%fd117, %fd116, %fd115;
	fma.rn.f64 	%fd118, %fd116, %fd115, %fd117;
	mul.f64 	%fd119, %fd118, %fd118;
	mov.f64 	%fd120, 0d3ED0EE258B7A8B04;
	mov.f64 	%fd121, 0d3EB1380B3AE80F1E;
	fma.rn.f64 	%fd122, %fd121, %fd119, %fd120;
	mov.f64 	%fd123, 0d3EF3B2669F02676F;
	fma.rn.f64 	%fd124, %fd122, %fd119, %fd123;
	mov.f64 	%fd125, 0d3F1745CBA9AB0956;
	fma.rn.f64 	%fd126, %fd124, %fd119, %fd125;
	mov.f64 	%fd127, 0d3F3C71C72D1B5154;
	fma.rn.f64 	%fd128, %fd126, %fd119, %fd127;
	mov.f64 	%fd129, 0d3F624924923BE72D;
	fma.rn.f64 	%fd130, %fd128, %fd119, %fd129;
	mov.f64 	%fd131, 0d3F8999999999A3C4;
	fma.rn.f64 	%fd132, %fd130, %fd119, %fd131;
	mov.f64 	%fd133, 0d3FB5555555555554;
	fma.rn.f64 	%fd134, %fd132, %fd119, %fd133;
	sub.f64 	%fd135, %fd116, %fd118;
	add.f64 	%fd136, %fd135, %fd135;
	neg.f64 	%fd137, %fd118;
	fma.rn.f64 	%fd138, %fd137, %fd116, %fd136;
	mul.f64 	%fd139, %fd115, %fd138;
	mul.f64 	%fd140, %fd134, %fd119;
	fma.rn.f64 	%fd141, %fd140, %fd118, %fd139;
	xor.b32  	%r44, %r54, -2147483648;
	mov.u32 	%r45, -2147483648;
	mov.u32 	%r46, 1127219200;
	mov.b64 	%fd142, {%r44, %r46};
	mov.b64 	%fd143, {%r45, %r46};
	sub.f64 	%fd144, %fd142, %fd143;
	mov.f64 	%fd145, 0d3FE62E42FEFA39EF;
	fma.rn.f64 	%fd146, %fd144, %fd145, %fd118;
	neg.f64 	%fd147, %fd144;
	fma.rn.f64 	%fd148, %fd147, %fd145, %fd146;
	sub.f64 	%fd149, %fd148, %fd118;
	sub.f64 	%fd150, %fd141, %fd149;
	mov.f64 	%fd151, 0d3C7ABC9E3B39803F;
	fma.rn.f64 	%fd152, %fd144, %fd151, %fd150;
	add.f64 	%fd156, %fd146, %fd152;

BB34_28:
	add.f64 	%fd157, %fd156, 0d3FE62E42FEFA39EF;

BB34_29:
	st.param.f64	[funj_retval0+0], %fd157;
	ret;
}

.visible .func  (.param .b32 funj_retval0) ___atanhs(
	.param .b32 ___atanhs_param_0
)
{
	.reg .pred 	%p<11>;
	.reg .s32 	%r<9>;
	.reg .f32 	%f<59>;


	ld.param.f32 	%f7, [___atanhs_param_0];
	abs.f32 	%f10, %f7;
	mov.f32 	%f11, 0f3F800000;
	sub.f32 	%f9, %f11, %f10;
	// inline asm
	rcp.approx.ftz.f32 %f8,%f9;
	// inline asm
	add.f32 	%f12, %f8, %f8;
	mul.f32 	%f13, %f12, %f10;
	setp.gt.f32	%p1, %f10, 0f7E800000;
	selp.f32	%f1, 0fC0000000, %f13, %p1;
	setp.le.f32	%p2, %f1, 0f3F266666;
	setp.ge.f32	%p3, %f1, 0fBEC9BA5E;
	and.pred  	%p4, %p3, %p2;
	@%p4 bra 	BB35_4;

	add.f32 	%f2, %f1, 0f3F800000;
	setp.gt.f32	%p5, %f2, 0f00000000;
	setp.lt.f32	%p6, %f2, 0f7F800000;
	and.pred  	%p7, %p5, %p6;
	@%p7 bra 	BB35_3;

	lg2.approx.f32 	%f58, %f2;
	bra.uni 	BB35_5;

BB35_3:
	setp.lt.f32	%p8, %f2, 0f00800000;
	mul.f32 	%f16, %f2, 0f4B800000;
	selp.f32	%f17, %f16, %f2, %p8;
	selp.f32	%f18, 0fC3170000, 0fC2FE0000, %p8;
	mov.b32 	 %r1, %f17;
	and.b32  	%r2, %r1, 8388607;
	or.b32  	%r3, %r2, 1065353216;
	mov.b32 	 %f19, %r3;
	shr.u32 	%r4, %r1, 23;
	cvt.rn.f32.u32	%f20, %r4;
	add.f32 	%f21, %f18, %f20;
	setp.gt.f32	%p9, %f19, 0f3FAE147B;
	mul.f32 	%f22, %f19, 0f3F000000;
	add.f32 	%f23, %f21, 0f3F800000;
	selp.f32	%f24, %f22, %f19, %p9;
	selp.f32	%f25, %f23, %f21, %p9;
	add.f32 	%f15, %f24, 0f3F800000;
	add.f32 	%f26, %f24, 0fBF800000;
	// inline asm
	rcp.approx.ftz.f32 %f14,%f15;
	// inline asm
	neg.f32 	%f27, %f26;
	mul.f32 	%f28, %f26, %f27;
	mul.rn.f32 	%f29, %f14, %f28;
	add.rn.f32 	%f30, %f26, %f29;
	mul.f32 	%f31, %f30, %f30;
	mov.f32 	%f32, 0f3C4C6A36;
	mov.f32 	%f33, 0f3B1E94E6;
	fma.rn.f32 	%f34, %f33, %f31, %f32;
	mov.f32 	%f35, 0f3DAAAB1A;
	fma.rn.f32 	%f36, %f34, %f31, %f35;
	mul.f32 	%f37, %f36, %f31;
	fma.rn.f32 	%f38, %f37, %f30, %f29;
	add.f32 	%f39, %f38, %f26;
	mov.f32 	%f40, 0f3F317218;
	fma.rn.f32 	%f58, %f25, %f40, %f39;
	bra.uni 	BB35_5;

BB35_4:
	add.f32 	%f41, %f1, 0f40000000;
	div.approx.f32 	%f42, %f1, %f41;
	neg.f32 	%f43, %f1;
	mul.rn.f32 	%f44, %f43, %f42;
	add.rn.f32 	%f45, %f1, %f44;
	mul.f32 	%f46, %f45, %f45;
	mov.f32 	%f47, 0f3C4C4BE0;
	mov.f32 	%f48, 0f3B2063C3;
	fma.rn.f32 	%f49, %f48, %f46, %f47;
	mov.f32 	%f50, 0f3DAAAB50;
	fma.rn.f32 	%f51, %f49, %f46, %f50;
	mul.f32 	%f52, %f51, %f46;
	fma.rn.f32 	%f53, %f52, %f45, %f44;
	add.f32 	%f58, %f53, %f1;

BB35_5:
	mul.f32 	%f54, %f58, 0f3F000000;
	abs.f32 	%f55, %f54;
	setp.le.f32	%p10, %f55, 0f7F800000;
	mov.b32 	 %r5, %f54;
	mov.b32 	 %r6, %f7;
	and.b32  	%r7, %r6, -2147483648;
	or.b32  	%r8, %r5, %r7;
	mov.b32 	 %f56, %r8;
	selp.f32	%f57, %f56, %f54, %p10;
	st.param.f32	[funj_retval0+0], %f57;
	ret;
}

.visible .func  (.param .b32 funj_retval0) ___atanhi(
	.param .b32 ___atanhi_param_0
)
{
	.reg .pred 	%p<11>;
	.reg .s32 	%r<11>;
	.reg .f32 	%f<59>;


	ld.param.u32 	%r1, [___atanhi_param_0];
	cvt.rn.f32.s32	%f1, %r1;
	abs.f32 	%f10, %f1;
	mov.f32 	%f11, 0f3F800000;
	sub.f32 	%f9, %f11, %f10;
	// inline asm
	rcp.approx.ftz.f32 %f8,%f9;
	// inline asm
	add.f32 	%f12, %f8, %f8;
	mul.f32 	%f13, %f12, %f10;
	setp.gt.f32	%p1, %f10, 0f7E800000;
	selp.f32	%f2, 0fC0000000, %f13, %p1;
	setp.le.f32	%p2, %f2, 0f3F266666;
	setp.ge.f32	%p3, %f2, 0fBEC9BA5E;
	and.pred  	%p4, %p3, %p2;
	@%p4 bra 	BB36_4;

	add.f32 	%f3, %f2, 0f3F800000;
	setp.gt.f32	%p5, %f3, 0f00000000;
	setp.lt.f32	%p6, %f3, 0f7F800000;
	and.pred  	%p7, %p5, %p6;
	@%p7 bra 	BB36_3;

	lg2.approx.f32 	%f58, %f3;
	bra.uni 	BB36_5;

BB36_3:
	setp.lt.f32	%p8, %f3, 0f00800000;
	mul.f32 	%f16, %f3, 0f4B800000;
	selp.f32	%f17, %f16, %f3, %p8;
	selp.f32	%f18, 0fC3170000, 0fC2FE0000, %p8;
	mov.b32 	 %r2, %f17;
	and.b32  	%r3, %r2, 8388607;
	or.b32  	%r4, %r3, 1065353216;
	mov.b32 	 %f19, %r4;
	shr.u32 	%r5, %r2, 23;
	cvt.rn.f32.u32	%f20, %r5;
	add.f32 	%f21, %f18, %f20;
	setp.gt.f32	%p9, %f19, 0f3FAE147B;
	mul.f32 	%f22, %f19, 0f3F000000;
	add.f32 	%f23, %f21, 0f3F800000;
	selp.f32	%f24, %f22, %f19, %p9;
	selp.f32	%f25, %f23, %f21, %p9;
	add.f32 	%f15, %f24, 0f3F800000;
	add.f32 	%f26, %f24, 0fBF800000;
	// inline asm
	rcp.approx.ftz.f32 %f14,%f15;
	// inline asm
	neg.f32 	%f27, %f26;
	mul.f32 	%f28, %f26, %f27;
	mul.rn.f32 	%f29, %f14, %f28;
	add.rn.f32 	%f30, %f26, %f29;
	mul.f32 	%f31, %f30, %f30;
	mov.f32 	%f32, 0f3C4C6A36;
	mov.f32 	%f33, 0f3B1E94E6;
	fma.rn.f32 	%f34, %f33, %f31, %f32;
	mov.f32 	%f35, 0f3DAAAB1A;
	fma.rn.f32 	%f36, %f34, %f31, %f35;
	mul.f32 	%f37, %f36, %f31;
	fma.rn.f32 	%f38, %f37, %f30, %f29;
	add.f32 	%f39, %f38, %f26;
	mov.f32 	%f40, 0f3F317218;
	fma.rn.f32 	%f58, %f25, %f40, %f39;
	bra.uni 	BB36_5;

BB36_4:
	add.f32 	%f41, %f2, 0f40000000;
	div.approx.f32 	%f42, %f2, %f41;
	neg.f32 	%f43, %f2;
	mul.rn.f32 	%f44, %f43, %f42;
	add.rn.f32 	%f45, %f2, %f44;
	mul.f32 	%f46, %f45, %f45;
	mov.f32 	%f47, 0f3C4C4BE0;
	mov.f32 	%f48, 0f3B2063C3;
	fma.rn.f32 	%f49, %f48, %f46, %f47;
	mov.f32 	%f50, 0f3DAAAB50;
	fma.rn.f32 	%f51, %f49, %f46, %f50;
	mul.f32 	%f52, %f51, %f46;
	fma.rn.f32 	%f53, %f52, %f45, %f44;
	add.f32 	%f58, %f53, %f2;

BB36_5:
	mul.f32 	%f54, %f58, 0f3F000000;
	abs.f32 	%f55, %f54;
	setp.le.f32	%p10, %f55, 0f7F800000;
	mov.b32 	 %r6, %f54;
	mov.b32 	 %r7, %f1;
	and.b32  	%r8, %r7, -2147483648;
	or.b32  	%r9, %r6, %r8;
	mov.b32 	 %f56, %r9;
	selp.f32	%f57, %f56, %f54, %p10;
	cvt.rzi.s32.f32	%r10, %f57;
	st.param.b32	[funj_retval0+0], %r10;
	ret;
}

.visible .func  (.param .b32 funj_retval0) ___atanhu(
	.param .b32 ___atanhu_param_0
)
{
	.reg .pred 	%p<11>;
	.reg .s32 	%r<11>;
	.reg .f32 	%f<59>;


	ld.param.u32 	%r1, [___atanhu_param_0];
	cvt.rn.f32.u32	%f1, %r1;
	abs.f32 	%f10, %f1;
	mov.f32 	%f11, 0f3F800000;
	sub.f32 	%f9, %f11, %f10;
	// inline asm
	rcp.approx.ftz.f32 %f8,%f9;
	// inline asm
	add.f32 	%f12, %f8, %f8;
	mul.f32 	%f13, %f12, %f10;
	setp.gt.f32	%p1, %f10, 0f7E800000;
	selp.f32	%f2, 0fC0000000, %f13, %p1;
	setp.le.f32	%p2, %f2, 0f3F266666;
	setp.ge.f32	%p3, %f2, 0fBEC9BA5E;
	and.pred  	%p4, %p3, %p2;
	@%p4 bra 	BB37_4;

	add.f32 	%f3, %f2, 0f3F800000;
	setp.gt.f32	%p5, %f3, 0f00000000;
	setp.lt.f32	%p6, %f3, 0f7F800000;
	and.pred  	%p7, %p5, %p6;
	@%p7 bra 	BB37_3;

	lg2.approx.f32 	%f58, %f3;
	bra.uni 	BB37_5;

BB37_3:
	setp.lt.f32	%p8, %f3, 0f00800000;
	mul.f32 	%f16, %f3, 0f4B800000;
	selp.f32	%f17, %f16, %f3, %p8;
	selp.f32	%f18, 0fC3170000, 0fC2FE0000, %p8;
	mov.b32 	 %r2, %f17;
	and.b32  	%r3, %r2, 8388607;
	or.b32  	%r4, %r3, 1065353216;
	mov.b32 	 %f19, %r4;
	shr.u32 	%r5, %r2, 23;
	cvt.rn.f32.u32	%f20, %r5;
	add.f32 	%f21, %f18, %f20;
	setp.gt.f32	%p9, %f19, 0f3FAE147B;
	mul.f32 	%f22, %f19, 0f3F000000;
	add.f32 	%f23, %f21, 0f3F800000;
	selp.f32	%f24, %f22, %f19, %p9;
	selp.f32	%f25, %f23, %f21, %p9;
	add.f32 	%f15, %f24, 0f3F800000;
	add.f32 	%f26, %f24, 0fBF800000;
	// inline asm
	rcp.approx.ftz.f32 %f14,%f15;
	// inline asm
	neg.f32 	%f27, %f26;
	mul.f32 	%f28, %f26, %f27;
	mul.rn.f32 	%f29, %f14, %f28;
	add.rn.f32 	%f30, %f26, %f29;
	mul.f32 	%f31, %f30, %f30;
	mov.f32 	%f32, 0f3C4C6A36;
	mov.f32 	%f33, 0f3B1E94E6;
	fma.rn.f32 	%f34, %f33, %f31, %f32;
	mov.f32 	%f35, 0f3DAAAB1A;
	fma.rn.f32 	%f36, %f34, %f31, %f35;
	mul.f32 	%f37, %f36, %f31;
	fma.rn.f32 	%f38, %f37, %f30, %f29;
	add.f32 	%f39, %f38, %f26;
	mov.f32 	%f40, 0f3F317218;
	fma.rn.f32 	%f58, %f25, %f40, %f39;
	bra.uni 	BB37_5;

BB37_4:
	add.f32 	%f41, %f2, 0f40000000;
	div.approx.f32 	%f42, %f2, %f41;
	neg.f32 	%f43, %f2;
	mul.rn.f32 	%f44, %f43, %f42;
	add.rn.f32 	%f45, %f2, %f44;
	mul.f32 	%f46, %f45, %f45;
	mov.f32 	%f47, 0f3C4C4BE0;
	mov.f32 	%f48, 0f3B2063C3;
	fma.rn.f32 	%f49, %f48, %f46, %f47;
	mov.f32 	%f50, 0f3DAAAB50;
	fma.rn.f32 	%f51, %f49, %f46, %f50;
	mul.f32 	%f52, %f51, %f46;
	fma.rn.f32 	%f53, %f52, %f45, %f44;
	add.f32 	%f58, %f53, %f2;

BB37_5:
	mul.f32 	%f54, %f58, 0f3F000000;
	abs.f32 	%f55, %f54;
	setp.le.f32	%p10, %f55, 0f7F800000;
	mov.b32 	 %r6, %f54;
	mov.b32 	 %r7, %f1;
	and.b32  	%r8, %r7, -2147483648;
	or.b32  	%r9, %r6, %r8;
	mov.b32 	 %f56, %r9;
	selp.f32	%f57, %f56, %f54, %p10;
	cvt.rzi.u32.f32	%r10, %f57;
	st.param.b32	[funj_retval0+0], %r10;
	ret;
}

.visible .func  (.param .b32 funj_retval0) ___atanhj(
	.param .b32 ___atanhj_param_0
)
{
	.reg .pred 	%p<11>;
	.reg .s16 	%rs<2>;
	.reg .s32 	%r<11>;
	.reg .f32 	%f<59>;


	ld.param.s8 	%rs1, [___atanhj_param_0];
	cvt.rn.f32.s16	%f1, %rs1;
	abs.f32 	%f10, %f1;
	mov.f32 	%f11, 0f3F800000;
	sub.f32 	%f9, %f11, %f10;
	// inline asm
	rcp.approx.ftz.f32 %f8,%f9;
	// inline asm
	add.f32 	%f12, %f8, %f8;
	mul.f32 	%f13, %f12, %f10;
	setp.gt.f32	%p1, %f10, 0f7E800000;
	selp.f32	%f2, 0fC0000000, %f13, %p1;
	setp.le.f32	%p2, %f2, 0f3F266666;
	setp.ge.f32	%p3, %f2, 0fBEC9BA5E;
	and.pred  	%p4, %p3, %p2;
	@%p4 bra 	BB38_4;

	add.f32 	%f3, %f2, 0f3F800000;
	setp.gt.f32	%p5, %f3, 0f00000000;
	setp.lt.f32	%p6, %f3, 0f7F800000;
	and.pred  	%p7, %p5, %p6;
	@%p7 bra 	BB38_3;

	lg2.approx.f32 	%f58, %f3;
	bra.uni 	BB38_5;

BB38_3:
	setp.lt.f32	%p8, %f3, 0f00800000;
	mul.f32 	%f16, %f3, 0f4B800000;
	selp.f32	%f17, %f16, %f3, %p8;
	selp.f32	%f18, 0fC3170000, 0fC2FE0000, %p8;
	mov.b32 	 %r1, %f17;
	and.b32  	%r2, %r1, 8388607;
	or.b32  	%r3, %r2, 1065353216;
	mov.b32 	 %f19, %r3;
	shr.u32 	%r4, %r1, 23;
	cvt.rn.f32.u32	%f20, %r4;
	add.f32 	%f21, %f18, %f20;
	setp.gt.f32	%p9, %f19, 0f3FAE147B;
	mul.f32 	%f22, %f19, 0f3F000000;
	add.f32 	%f23, %f21, 0f3F800000;
	selp.f32	%f24, %f22, %f19, %p9;
	selp.f32	%f25, %f23, %f21, %p9;
	add.f32 	%f15, %f24, 0f3F800000;
	add.f32 	%f26, %f24, 0fBF800000;
	// inline asm
	rcp.approx.ftz.f32 %f14,%f15;
	// inline asm
	neg.f32 	%f27, %f26;
	mul.f32 	%f28, %f26, %f27;
	mul.rn.f32 	%f29, %f14, %f28;
	add.rn.f32 	%f30, %f26, %f29;
	mul.f32 	%f31, %f30, %f30;
	mov.f32 	%f32, 0f3C4C6A36;
	mov.f32 	%f33, 0f3B1E94E6;
	fma.rn.f32 	%f34, %f33, %f31, %f32;
	mov.f32 	%f35, 0f3DAAAB1A;
	fma.rn.f32 	%f36, %f34, %f31, %f35;
	mul.f32 	%f37, %f36, %f31;
	fma.rn.f32 	%f38, %f37, %f30, %f29;
	add.f32 	%f39, %f38, %f26;
	mov.f32 	%f40, 0f3F317218;
	fma.rn.f32 	%f58, %f25, %f40, %f39;
	bra.uni 	BB38_5;

BB38_4:
	add.f32 	%f41, %f2, 0f40000000;
	div.approx.f32 	%f42, %f2, %f41;
	neg.f32 	%f43, %f2;
	mul.rn.f32 	%f44, %f43, %f42;
	add.rn.f32 	%f45, %f2, %f44;
	mul.f32 	%f46, %f45, %f45;
	mov.f32 	%f47, 0f3C4C4BE0;
	mov.f32 	%f48, 0f3B2063C3;
	fma.rn.f32 	%f49, %f48, %f46, %f47;
	mov.f32 	%f50, 0f3DAAAB50;
	fma.rn.f32 	%f51, %f49, %f46, %f50;
	mul.f32 	%f52, %f51, %f46;
	fma.rn.f32 	%f53, %f52, %f45, %f44;
	add.f32 	%f58, %f53, %f2;

BB38_5:
	mul.f32 	%f54, %f58, 0f3F000000;
	abs.f32 	%f55, %f54;
	setp.le.f32	%p10, %f55, 0f7F800000;
	mov.b32 	 %r5, %f54;
	mov.b32 	 %r6, %f1;
	and.b32  	%r7, %r6, -2147483648;
	or.b32  	%r8, %r5, %r7;
	mov.b32 	 %f56, %r8;
	selp.f32	%f57, %f56, %f54, %p10;
	cvt.rzi.s32.f32	%r9, %f57;
	cvt.s32.s8 	%r10, %r9;
	st.param.b32	[funj_retval0+0], %r10;
	ret;
}

.visible .func  (.param .b32 funj_retval0) ___atanvv(
	.param .b32 ___atanvv_param_0
)
{
	.reg .pred 	%p<11>;
	.reg .s16 	%rs<2>;
	.reg .s32 	%r<11>;
	.reg .f32 	%f<59>;


	ld.param.u8 	%rs1, [___atanvv_param_0];
	cvt.rn.f32.u16	%f1, %rs1;
	abs.f32 	%f10, %f1;
	mov.f32 	%f11, 0f3F800000;
	sub.f32 	%f9, %f11, %f10;
	// inline asm
	rcp.approx.ftz.f32 %f8,%f9;
	// inline asm
	add.f32 	%f12, %f8, %f8;
	mul.f32 	%f13, %f12, %f10;
	setp.gt.f32	%p1, %f10, 0f7E800000;
	selp.f32	%f2, 0fC0000000, %f13, %p1;
	setp.le.f32	%p2, %f2, 0f3F266666;
	setp.ge.f32	%p3, %f2, 0fBEC9BA5E;
	and.pred  	%p4, %p3, %p2;
	@%p4 bra 	BB39_4;

	add.f32 	%f3, %f2, 0f3F800000;
	setp.gt.f32	%p5, %f3, 0f00000000;
	setp.lt.f32	%p6, %f3, 0f7F800000;
	and.pred  	%p7, %p5, %p6;
	@%p7 bra 	BB39_3;

	lg2.approx.f32 	%f58, %f3;
	bra.uni 	BB39_5;

BB39_3:
	setp.lt.f32	%p8, %f3, 0f00800000;
	mul.f32 	%f16, %f3, 0f4B800000;
	selp.f32	%f17, %f16, %f3, %p8;
	selp.f32	%f18, 0fC3170000, 0fC2FE0000, %p8;
	mov.b32 	 %r1, %f17;
	and.b32  	%r2, %r1, 8388607;
	or.b32  	%r3, %r2, 1065353216;
	mov.b32 	 %f19, %r3;
	shr.u32 	%r4, %r1, 23;
	cvt.rn.f32.u32	%f20, %r4;
	add.f32 	%f21, %f18, %f20;
	setp.gt.f32	%p9, %f19, 0f3FAE147B;
	mul.f32 	%f22, %f19, 0f3F000000;
	add.f32 	%f23, %f21, 0f3F800000;
	selp.f32	%f24, %f22, %f19, %p9;
	selp.f32	%f25, %f23, %f21, %p9;
	add.f32 	%f15, %f24, 0f3F800000;
	add.f32 	%f26, %f24, 0fBF800000;
	// inline asm
	rcp.approx.ftz.f32 %f14,%f15;
	// inline asm
	neg.f32 	%f27, %f26;
	mul.f32 	%f28, %f26, %f27;
	mul.rn.f32 	%f29, %f14, %f28;
	add.rn.f32 	%f30, %f26, %f29;
	mul.f32 	%f31, %f30, %f30;
	mov.f32 	%f32, 0f3C4C6A36;
	mov.f32 	%f33, 0f3B1E94E6;
	fma.rn.f32 	%f34, %f33, %f31, %f32;
	mov.f32 	%f35, 0f3DAAAB1A;
	fma.rn.f32 	%f36, %f34, %f31, %f35;
	mul.f32 	%f37, %f36, %f31;
	fma.rn.f32 	%f38, %f37, %f30, %f29;
	add.f32 	%f39, %f38, %f26;
	mov.f32 	%f40, 0f3F317218;
	fma.rn.f32 	%f58, %f25, %f40, %f39;
	bra.uni 	BB39_5;

BB39_4:
	add.f32 	%f41, %f2, 0f40000000;
	div.approx.f32 	%f42, %f2, %f41;
	neg.f32 	%f43, %f2;
	mul.rn.f32 	%f44, %f43, %f42;
	add.rn.f32 	%f45, %f2, %f44;
	mul.f32 	%f46, %f45, %f45;
	mov.f32 	%f47, 0f3C4C4BE0;
	mov.f32 	%f48, 0f3B2063C3;
	fma.rn.f32 	%f49, %f48, %f46, %f47;
	mov.f32 	%f50, 0f3DAAAB50;
	fma.rn.f32 	%f51, %f49, %f46, %f50;
	mul.f32 	%f52, %f51, %f46;
	fma.rn.f32 	%f53, %f52, %f45, %f44;
	add.f32 	%f58, %f53, %f2;

BB39_5:
	mul.f32 	%f54, %f58, 0f3F000000;
	abs.f32 	%f55, %f54;
	setp.le.f32	%p10, %f55, 0f7F800000;
	mov.b32 	 %r5, %f54;
	mov.b32 	 %r6, %f1;
	and.b32  	%r7, %r6, -2147483648;
	or.b32  	%r8, %r5, %r7;
	mov.b32 	 %f56, %r8;
	selp.f32	%f57, %f56, %f54, %p10;
	cvt.rzi.u32.f32	%r9, %f57;
	and.b32  	%r10, %r9, 255;
	st.param.b32	[funj_retval0+0], %r10;
	ret;
}

.visible .func  (.param .b64 funj_retval0) ___atanhd(
	.param .b64 ___atanhd_param_0
)
{
	.reg .pred 	%p<13>;
	.reg .s32 	%r<28>;
	.reg .f64 	%fd<91>;


	ld.param.f64 	%fd11, [___atanhd_param_0];
	abs.f64 	%fd12, %fd11;
	add.f64 	%fd13, %fd12, %fd12;
	mov.f64 	%fd14, 0d3FF0000000000000;
	sub.f64 	%fd15, %fd14, %fd12;
	div.rn.f64 	%fd1, %fd13, %fd15;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r11}, %fd1;
	}
	setp.lt.u32	%p1, %r11, 1071994197;
	setp.lt.s32	%p2, %r11, -1076258407;
	or.pred  	%p3, %p1, %p2;
	@%p3 bra 	BB40_13;

	add.f64 	%fd2, %fd1, 0d3FF0000000000000;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r24}, %fd2;
	}
	setp.gt.f64	%p4, %fd2, 0d0000000000000000;
	setp.lt.s32	%p5, %r24, 2146435072;
	and.pred  	%p6, %p4, %p5;
	@%p6 bra 	BB40_7;

	abs.f64 	%fd16, %fd2;
	setp.gtu.f64	%p7, %fd16, 0d7FF0000000000000;
	@%p7 bra 	BB40_6;

	setp.neu.f64	%p8, %fd2, 0d0000000000000000;
	@%p8 bra 	BB40_5;

	mov.f64 	%fd90, 0dFFF0000000000000;
	bra.uni 	BB40_14;

BB40_5:
	setp.eq.f64	%p9, %fd2, 0d7FF0000000000000;
	selp.f64	%fd90, %fd2, 0dFFF8000000000000, %p9;
	bra.uni 	BB40_14;

BB40_6:
	add.f64 	%fd90, %fd2, %fd2;
	bra.uni 	BB40_14;

BB40_7:
	{
	.reg .b32 %temp; 
	mov.b64 	{%r25, %temp}, %fd2;
	}
	setp.lt.s32	%p10, %r24, 1048576;
	@%p10 bra 	BB40_9;

	mov.u32 	%r26, -1023;
	bra.uni 	BB40_10;

BB40_9:
	mul.f64 	%fd18, %fd2, 0d4350000000000000;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r24}, %fd18;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%r25, %temp}, %fd18;
	}
	mov.u32 	%r26, -1077;

BB40_10:
	shr.u32 	%r14, %r24, 20;
	add.s32 	%r27, %r26, %r14;
	and.b32  	%r15, %r24, -2146435073;
	or.b32  	%r16, %r15, 1072693248;
	mov.b64 	%fd89, {%r25, %r16};
	setp.lt.s32	%p11, %r16, 1073127583;
	@%p11 bra 	BB40_12;

	{
	.reg .b32 %temp; 
	mov.b64 	{%r17, %temp}, %fd89;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r18}, %fd89;
	}
	add.s32 	%r19, %r18, -1048576;
	mov.b64 	%fd89, {%r17, %r19};
	add.s32 	%r27, %r27, 1;

BB40_12:
	add.f64 	%fd20, %fd89, 0d3FF0000000000000;
	// inline asm
	rcp.approx.ftz.f64 %fd19,%fd20;
	// inline asm
	neg.f64 	%fd22, %fd20;
	fma.rn.f64 	%fd23, %fd22, %fd19, %fd14;
	fma.rn.f64 	%fd24, %fd23, %fd23, %fd23;
	fma.rn.f64 	%fd25, %fd24, %fd19, %fd19;
	add.f64 	%fd26, %fd89, 0dBFF0000000000000;
	mul.f64 	%fd27, %fd26, %fd25;
	fma.rn.f64 	%fd28, %fd26, %fd25, %fd27;
	mul.f64 	%fd29, %fd28, %fd28;
	mov.f64 	%fd30, 0d3ED0EE258B7A8B04;
	mov.f64 	%fd31, 0d3EB1380B3AE80F1E;
	fma.rn.f64 	%fd32, %fd31, %fd29, %fd30;
	mov.f64 	%fd33, 0d3EF3B2669F02676F;
	fma.rn.f64 	%fd34, %fd32, %fd29, %fd33;
	mov.f64 	%fd35, 0d3F1745CBA9AB0956;
	fma.rn.f64 	%fd36, %fd34, %fd29, %fd35;
	mov.f64 	%fd37, 0d3F3C71C72D1B5154;
	fma.rn.f64 	%fd38, %fd36, %fd29, %fd37;
	mov.f64 	%fd39, 0d3F624924923BE72D;
	fma.rn.f64 	%fd40, %fd38, %fd29, %fd39;
	mov.f64 	%fd41, 0d3F8999999999A3C4;
	fma.rn.f64 	%fd42, %fd40, %fd29, %fd41;
	mov.f64 	%fd43, 0d3FB5555555555554;
	fma.rn.f64 	%fd44, %fd42, %fd29, %fd43;
	sub.f64 	%fd45, %fd26, %fd28;
	add.f64 	%fd46, %fd45, %fd45;
	neg.f64 	%fd47, %fd28;
	fma.rn.f64 	%fd48, %fd47, %fd26, %fd46;
	mul.f64 	%fd49, %fd25, %fd48;
	mul.f64 	%fd50, %fd44, %fd29;
	fma.rn.f64 	%fd51, %fd50, %fd28, %fd49;
	xor.b32  	%r20, %r27, -2147483648;
	mov.u32 	%r21, -2147483648;
	mov.u32 	%r22, 1127219200;
	mov.b64 	%fd52, {%r20, %r22};
	mov.b64 	%fd53, {%r21, %r22};
	sub.f64 	%fd54, %fd52, %fd53;
	mov.f64 	%fd55, 0d3FE62E42FEFA39EF;
	fma.rn.f64 	%fd56, %fd54, %fd55, %fd28;
	neg.f64 	%fd57, %fd54;
	fma.rn.f64 	%fd58, %fd57, %fd55, %fd56;
	sub.f64 	%fd59, %fd58, %fd28;
	sub.f64 	%fd60, %fd51, %fd59;
	mov.f64 	%fd61, 0d3C7ABC9E3B39803F;
	fma.rn.f64 	%fd62, %fd54, %fd61, %fd60;
	add.f64 	%fd90, %fd56, %fd62;
	bra.uni 	BB40_14;

BB40_13:
	add.f64 	%fd63, %fd1, 0d4000000000000000;
	div.rn.f64 	%fd64, %fd1, %fd63;
	neg.f64 	%fd65, %fd1;
	mul.f64 	%fd66, %fd64, %fd65;
	add.f64 	%fd67, %fd1, %fd66;
	mul.f64 	%fd68, %fd67, %fd67;
	mov.f64 	%fd69, 0d3ED087FFCEB2DC44;
	mov.f64 	%fd70, 0d3EB372FB2FBE14B5;
	fma.rn.f64 	%fd71, %fd70, %fd68, %fd69;
	mov.f64 	%fd72, 0d3EF3B9FF890F468C;
	fma.rn.f64 	%fd73, %fd71, %fd68, %fd72;
	mov.f64 	%fd74, 0d3F17457EFD51BAF8;
	fma.rn.f64 	%fd75, %fd73, %fd68, %fd74;
	mov.f64 	%fd76, 0d3F3C71C8DE3CE825;
	fma.rn.f64 	%fd77, %fd75, %fd68, %fd76;
	mov.f64 	%fd78, 0d3F6249248FA4661F;
	fma.rn.f64 	%fd79, %fd77, %fd68, %fd78;
	mov.f64 	%fd80, 0d3F899999999D70C4;
	fma.rn.f64 	%fd81, %fd79, %fd68, %fd80;
	mov.f64 	%fd82, 0d3FB5555555555462;
	fma.rn.f64 	%fd83, %fd81, %fd68, %fd82;
	mul.f64 	%fd84, %fd83, %fd68;
	fma.rn.f64 	%fd85, %fd84, %fd67, %fd66;
	add.f64 	%fd90, %fd85, %fd1;

BB40_14:
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r23}, %fd11;
	}
	setp.lt.s32	%p12, %r23, 0;
	mul.f64 	%fd86, %fd90, 0d3FE0000000000000;
	neg.f64 	%fd87, %fd86;
	selp.f64	%fd88, %fd87, %fd86, %p12;
	st.param.f64	[funj_retval0+0], %fd88;
	ret;
}


